{"version":3,"sources":["webpack:///src/app/workspace/workspace.component.html","webpack:///src/app/workspace/workspace.component.ts","webpack:///src/app/workspace/shared/job.service.ts","webpack:///src/app/workspace/shared/history-loading/history-loading.component.ts","webpack:///src/app/workspace/shared/history-loading/history-loading.component.html","webpack:///src/app/workspace/shared/display-values/display-values.component.html","webpack:///src/app/workspace/shared/display-values/display-values.component.ts","webpack:///src/app/workspace/shared/export-modal/export-modal.component.html","webpack:///src/app/workspace/shared/export-modal/export-modal.component.ts","webpack:///src/app/workspace/shared/set-cutoff/set-cutoff.component.html","webpack:///src/app/workspace/shared/set-cutoff/set-cutoff.component.ts","webpack:///src/app/workspace/shared/set-highlight/set-highlight.component.ts","webpack:///src/app/workspace/shared/set-highlight/set-highlight.component.html","webpack:///src/app/workspace/shared/result-viewer/result-viewer.component.html","webpack:///src/app/workspace/shared/result-viewer/result-viewer.component.ts","webpack:///src/app/workspace/history/history.component.html","webpack:///src/app/workspace/history/history.component.ts","webpack:///src/app/workspace/workspace-routing.module.ts","webpack:///src/app/workspace/workspace.module.ts"],"names":["WorkspaceComponent","router","historySrvc","notify","navSrvc","histories","isLoading","this","routeReuseStrategy","shouldReuseRoute","getUserHistory","getAll","pipe","finalize","subscribe","data","map","h","deserialize","updateBadge","confirm","deleteAll","success","msg","id","delete","clearHistory","JobService","http","url","endpoints","api","of","uuid","status","result","alias","scores","start","raw_score","HistoryLoadingComponent","DisplayValuesComponent","fileSrvc","headers","values","objectKeys","Object","keys","exportAsExcelFile","name","exportToExcel","ExportModalComponent","list","to","items","length","_items","f","isChecked","push","filter","SetCutoffComponent","option","operators","desc","op","SetHighlightComponent","builder","onSet","highlightForm","get","group","from","compose","min","required","max","value","emit","set","ResultViewerComponent","sqSrvc","modal","route","loader","featureSrvc","_data","isSearching","options","filters","operatorsFn","a","b","console","log","construct","startLoading","r","display","generateScores","type","color","getRandomColor","getFeatures","i","dna_seq","pos","score","Math","random","nav","nativeElement","document","querySelectorAll","forEach","x","setAttribute","dnaSeq","proteinSeq","toProteinSeqVw","protein_seq","tracksElem","getTrackView","tracks","saver","preSave","base","querySelector","title","createElement","innerHTML","insertBefore","firstChild","element","style","fontSize","postSave","removeChild","getElementById","stopLoading","destroyModal","track","accession","end","val","split","join","floor","fixedHighlight","undefined","getByAlias","cutoffs","getElementsByTagName","visibility","c","tplModal","create","nzTitle","nzContent","nzWidth","nzComponentParams","nzOnOk","cmp","Number","isNaN","setThreshold","afterClose","d","operator","find","o","v","clearCutoffs","info","valuesModal","nzWrapClassName","nzFooter","s","norm_score","motif","motifInSeq","count","positions","charAt","substring","error","err","features","e","ft","description","genome_min","genome_max","exportToGb","key","nzOkText","l","destroy","Array","isArray","export","snapshot","history","saveFileAs","mimetype","filename","exportModal","searchMotif","displayAll","hideAll","changeColors","clearHighlight","HistoryComponent","jobSrvc","titleSrvc","isJobLoading","trackHovered","attempts","setTitle","getJob","interval","clearInterval","getById","job_id","job","isDone","resultData","isActive","setInterval","nzCancelText","navigate","str","txt","path","component","workspace","detail","resolve","WorkspaceRoutingModule","forChild","WorkspaceModule"],"mappings":"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A,kBAEE,kBACE,iBACE,kBACE,iBACF,OACF,OACF,OAEA,kBACE,iBACE,kBACE,iBACF,OACF,OACF,OAEA,kBACE,iBACE,kBACE,iBACF,OACF,OACF,OAEA,kBACE,iBACE,kBACE,iBACF,OACF,OACF,OAEF,OAEF,OAEF,OAEA,kBAEE,iBACE,iBACE,iBACF,OACF,OAEA,iBACE,kBACE,iBACA,iBACA,iBACA,iBACA,iBACF,OACF,OAEF,OAEA,kBAEE,iBACE,iBACE,iBACF,OACF,OAEA,iBACE,kBACE,iBACF,OAEA,oBAEE,iBACE,cACE,cACE,kBACE,iBACF,OACF,OACA,cACE,kBACE,iBACF,OACF,OACF,OACA,cACE,cACE,iBACE,iBACF,OACF,OACA,cACE,iBACE,iBACF,OACF,OACF,OACF,OAEF,OACF,OAEF,OAEA,kBAEE,iBACE,iBACE,kBACF,OACF,OAEA,kBAEE,mBACE,mBACF,OAEF,OAEF,OAEF,OAEF,OAEF,OAEF,OAEA,mBAEE,kBACE,kBACE,mBACE,kBACA,kBACA,kBACA,kBACA,kBACF,OACA,mBACE,kBACA,kBACA,kBACA,kBACA,kBACF,OACA,mBACE,kBACA,kBACA,kBACA,kBACA,kBACF,OACA,mBACE,kBACA,kBACA,kBACA,kBACA,kBACF,OACA,mBACE,kBACA,kBACA,kBACA,kBACA,kBACF,OACA,mBACE,kBACA,kBACA,kBACA,kBACA,kBACF,OACF,OACF,OAEF,OAEF,OA1RF,S,iBDOO,G,yCEwBK,aACE,QACF,Q,yBADE,yB,yBAQF,aACE,QACF,Q,4CADE,4B,yBAFJ,aACE,sBAGF,Q,kCAHM,yCC7BT,Y,MAAMC,EAUX,YACUC,EACAvC,GADA,KAAAuC,WACA,KAAAvC,SAVD,KAAAwC,QAAoB,GACpB,KAAAC,OAAgB,GAKzB,KAAAC,WAAaC,OAAOC,KAOpB,gBACMxC,KAAKqC,SACPrC,KAAKmC,SAASM,kBAAkB,CAAC,CAAEC,KAAM,SAAUlC,KAAMR,KAAKqC,UAC9DrC,KAAKJ,OAAOmB,QAAQ,4B,6CAlBbmB,GAAsB,sB,uBA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","file":"x","sourcesContent":["<div class=\"ui main container\">\n\n  <div class=\"ui padded grid p-4\">\n\n    <div class=\"sixteen wide column\">\n      <h1 class=\"ui header\">Recent history</h1>\n    </div>\n\n    <div class=\"row\">\n\n      <div class=\"eleven wide column\">\n        <p>\n          Here you can find the history of all the <strong>jobs</strong> submitted.\n        </p>\n        <p>\n          <i class=\"info circle icon\"></i> Note that such history is <strong>session</strong> based, this means that it'll expire after a certain time or if browser data is cleared.\n        </p>\n      </div>\n\n      <div class=\"five wide column right aligned\">\n\n        <button type=\"button\" class=\"ui red right labeled icon button\" (click)=\"clearHistory()\" [disabled]=\"!isLoading && !histories.length\" name=\"button\">\n          Clear history <i class=\"trash icon\"></i>\n        </button>\n\n      </div>\n\n    </div>\n\n    <div class=\"one column row\">\n\n      <div class=\"column center aligned p-8\" *ngIf=\"!isLoading && !histories.length\">\n        <div class=\"ui icon header meta\">\n          <i class=\"inbox icon\"></i>\n          Yo have no history.\n        </div>\n      </div>\n\n      <div class=\"column\" *ngIf=\"!isLoading && histories.length\">\n\n        <div class=\"ui segment p-0\" [ngClass]=\"{'loading': isLoading}\">\n\n          <table class=\"ui very padded selectable basic table b-0\">\n\n            <thead>\n              <tr>\n                <th colspan=\"5\">\n                  Your history\n                </th>\n                <th class=\"right aligned\">\n                  {{histories.length}} entries\n                </th>\n              </tr>\n            </thead>\n\n            <tbody>\n\n              <tr [ngClass]=\"{'warning':  h.status != 'failed' && h.status != 'finished'}\" *ngFor=\"let h of histories\">\n                <td>\n                  <h3><a [routerLink]=\"[h.id]\">{{h.name}}</a></h3>\n                </td>\n                <td>\n                  <h3><a class=\"disabled\">{{h.construct.label}}</a></h3>\n                </td>\n                <td>\n                  {{h.construct?.specie?.name}}\n                </td>\n                <td>\n                  <time [dateTime]=\"h.created_at\">\n                    {{h.created_at | date: 'DD/MM/YYYY HH:mm'}}\n                  </time>\n                </td>\n                <td>\n                  <div class=\"ant-badge ant-badge-status ant-badge-not-a-wrapper link\" data-inverted=\"\" data-position=\"top center\" [attr.data-tooltip]=\"h.status | titlecase\">\n                    <span class=\"ant-badge-status-dot\" [ngClass]=\"{'ant-badge-status-error': h.status === 'failed',\n                      'ant-badge-status-success':  h.status === 'finished',\n                      'ant-badge-status-processing': h.status != 'failed' && h.status != 'finished'}\"></span>\n                  </div>\n                </td>\n                <td class=\"ui center aligned\">\n                  <a [sqy-clipboard]=\"h.id\" data-inverted=\"\" data-position=\"top center\" data-tooltip=\"Copy ID\">\n                    <i class=\"copy icon\"></i>\n                  </a>\n                  <a [routerLink]=\"['/editor', h.id]\" data-inverted=\"\" data-position=\"top center\" data-tooltip=\"Load on vector editor\">\n                    <i class=\"external link icon\"></i>\n                  </a>\n                  <a (click)=\"deleteHistory(h.id)\" data-inverted=\"\" data-position=\"top center\" data-tooltip=\"Delete\">\n                    <i class=\"trash link red icon\"></i>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { HistoryService } from './shared/history.service';\nimport { UserHistory } from './shared/user-history';\nimport { NavService } from '@services/nav.service';\n\n@Component({\n  selector: 'sqy-workspace',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.scss']\n})\nexport class WorkspaceComponent implements OnInit {\n\n  histories: UserHistory[] = [];\n  isLoading = false;\n\n  constructor(\n    private router: Router,\n    private historySrvc: HistoryService,\n    private notify: NzMessageService,\n    private navSrvc: NavService\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.getUserHistory();\n  }\n\n  getUserHistory() {\n    this.isLoading = true;\n    this.historySrvc.getAll()\n      .pipe(finalize(() => this.isLoading = false))\n      .subscribe(data => {\n        this.histories = data.map((h: any) => new UserHistory().deserialize(h)) || [];\n        this.navSrvc.updateBadge();\n      });\n  }\n\n  clearHistory() {\n    if (confirm('Are you sure that you want to clear history?. This action cannot be reverted.')) {\n      this.isLoading = true;\n      this.historySrvc.deleteAll()\n        .pipe(finalize(() => this.isLoading = false))\n        .subscribe(data => {\n          this.navSrvc.updateBadge();\n          this.getUserHistory();\n          this.notify.success(data.msg);\n        });\n    }\n  }\n\n  deleteHistory(id: string) {\n    if (confirm('Are you sure that you want to delete such history?. This action cannot be reverted.')) {\n      this.isLoading = true;\n      this.historySrvc.delete(id)\n        .pipe(finalize(() => this.isLoading = false))\n        .subscribe(() => {\n          this.navSrvc.updateBadge();\n          this.getUserHistory();\n          this.notify.success('History deleted!');\n        });\n    }\n  }\n\n}\n","import { Construct } from './../../shared/models/construct';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { environment as env } from '@env/environment';\nimport { Job } from './job';\nimport { of } from 'rxjs';\n\nconst URL_ENV = '/workspace/job/';\n\n@Injectable({ providedIn: 'root' })\nexport class JobService {\n\n  private url: string;  // URL to web api\n\n  constructor(private http: HttpClient) {\n    this.url = env.endpoints.api + URL_ENV;\n  }\n\n  getById(id: string): Observable<any> {\n    return of({\n      uuid: 'ecbc2279-0d4e-4844-83b4-e876ef089923',\n  status: 'finished',\n  result: [{\n    alias: 'A',\n    scores: [{start: 1, raw_score: 20},\n      {start: 20, raw_score: 0.80},\n      {start: 20, raw_score: 0.80},\n      {start: 20, raw_score: 0.80},\n      {start: 20, raw_score: 0.80},\n      {start: 20, raw_score: 0.80},\n      {start: 20, raw_score: 0.80},\n      {start: 20, raw_score: 0.80},\n    ]\n  }]\n    })\n    // return this.http.get<Job>(`${this.url}${id}`).pipe();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sqy-history-loading',\n  templateUrl: './history-loading.component.html',\n  styleUrls: ['./history-loading.component.scss']\n})\nexport class HistoryLoadingComponent {\n\n}\n","<div class=\"ui main fluid container p-4 mt-6\">\n\n  <div class=\"ui grid\">\n\n    <div class=\"row\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded one column grid\">\n\n            <div class=\"column\">\n              <div class=\"ui fluid placeholder\">\n                <div class=\"header\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"two column row\">\n\n              <div class=\"column\">\n\n              </div>\n\n              <div class=\"column txt-r\">\n\n                <a class=\"disabled\">\n                  <i class=\"trash icon\"></i>\n                  Delete history\n                </a>\n\n              </div>\n\n            </div>\n\n            <div class=\"column\">\n              <div class=\"ui fluid placeholder\">\n                <div class=\"paragraph\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"column\">\n              <div class=\"ui placeholder\">\n                <div class=\"paragraph\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"row\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded form grid\">\n\n            <div class=\"one column row\">\n              <div class=\"column txt-c\">\n                <div class=\"ui placeholder\">\n                  <div class=\"paragraph\">\n                    <div class=\"line\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n\n                <div class=\"field\">\n                  <div class=\"ui fluid placeholder\">\n                    <div class=\"paragraph\">\n                      <div class=\"line\"></div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"four inline fields\">\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <div class=\"ui fluid placeholder\">\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n\n              <div class=\"column\">\n                <div class=\"ui placeholder\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <div class=\"ui fluid placeholder\">\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n\n              <div class=\"column\">\n                <div class=\"ui placeholder\">\n                  <div class=\"line\"></div>\n                </div>\n\n                <table class=\"ui blue padded sequence definition table\">\n\n                  <tbody>\n                    <tr>\n                      <th>\n                        <div class=\"ui placeholder\">\n                          <div class=\"line\"></div>\n                        </div>\n                      </th>\n                      <td>\n                        <div class=\"ui placeholder\">\n                          <div class=\"line\"></div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>\n                        <div class=\"ui fluid placeholder\">\n                          <div class=\"line\"></div>\n                        </div>\n                      </th>\n                      <td>\n                        <div class=\"ui fluid placeholder\">\n                          <div class=\"line\"></div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n\n                </table>\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <div class=\"ui fluid placeholder\">\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n\n              <div class=\"column\">\n\n                <div class=\"ui placeholder\">\n                  <div class=\"image\"></div>\n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"one column row\">\n\n      <div class=\"column\">\n        <div class=\"ui fluid placeholder\">\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n","<!-- Values viewer modal-->\n<div class=\"ui padded grid\">\n\n  <div class=\"row\" [hidden]=\"!title\">\n    <div class=\"column\">\n      <h2 class=\"ui header no-bold\">{{title}}</h2>\n    </div>\n  </div>\n\n  <div class=\"two column row\">\n\n    <div class=\"column\">\n      <strong> Total score:</strong> {{values?.length}}\n    </div>\n\n    <div class=\"column pr-5 right aligned\">\n      <button type=\"button\" name=\"download\" class=\"ui primary right labeled icon button\" (click)=\"exportToExcel()\">\n        Download as Excel\n        <i class=\"download icon\"></i>\n      </button>\n    </div>\n\n  </div>\n\n  <div class=\"row\">\n\n    <div class=\"column\">\n      <table class=\"ui selectable small compact table\">\n\n        <thead>\n          <tr>\n            <th *ngFor=\"let h of headers\">\n              {{h}}\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n\n          <tr *ngFor=\"let value of values\">\n            <td *ngFor=\"let key of objectKeys(value)\">\n              {{value[key]}}\n            </td>\n          </tr>\n\n        </tbody>\n\n      </table>\n    </div>\n  </div>\n\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { FileService } from '@services/file.service';\n\n@Component({\n  selector: 'sqy-display-values',\n  templateUrl: './display-values.component.html',\n  styleUrls: ['./display-values.component.scss']\n})\nexport class DisplayValuesComponent {\n\n  @Input() headers: string[] = [];\n  @Input() values: any[] = [];\n  @Input() min: number;\n  @Input() max: number;\n  @Input() title: string;\n\n  objectKeys = Object.keys;\n\n  constructor(\n    private fileSrvc: FileService,\n    private notify: NzMessageService\n  ) { }\n\n  exportToExcel() {\n    if (this.values) {\n      this.fileSrvc.exportAsExcelFile([{ name: 'Scores', data: this.values }]);\n      this.notify.success('Exported successfully!');\n    }\n  }\n\n}\n","<div class=\"ui padded grid\">\n\n  <div class=\"row\">\n    <div class=\"sixteen wide column\">\n      <h2 class=\"ui header no-bold\">Export as</h2>\n    </div>\n  </div>\n\n  <div class=\"row\">\n\n    <div class=\"four wide column\">\n      <label class=\"sqy label\">\n        <i class=\"file outline icon\"></i> GenBank\n      </label>\n      <input type=\"radio\" name=\"to\" value=\"gb\" [(ngModel)]=\"to\">\n    </div>\n\n    <div class=\"four wide column\">\n      <label class=\"sqy label\">\n        <i class=\"file excel outline icon\"></i> Excel\n      </label>\n      <input type=\"radio\" name=\"to\" value=\"excel\" [(ngModel)]=\"to\">\n    </div>\n\n  </div>\n\n  <div class=\"row\">\n    <div class=\"column\">\n      <h2 class=\"ui header no-bold\">Select items to export</h2>\n    </div>\n  </div>\n\n  <div class=\"one column row\">\n\n    <div class=\"column\">\n      <span class=\"meta\">If there is no item selected only scores will be exported.</span>\n    </div>\n\n    <div class=\"column pt-3\">\n      <span class=\"meta\">{{list.length}} / {{_items.length}} selected</span>\n    </div>\n\n    <div class=\"column\" *ngFor=\"let f of _items\">\n      <div class=\"ui checkbox\">\n        <input type=\"checkbox\" name=\"features\" checked (change)=\"featChange(f.alias, $event.target.checked)\">\n        <label>\n          <i class=\"circle icon\" [style.color]=\"f.color\"></i> {{f.name}}\n          <sqy-info-popup [content]=\"f.description\"></sqy-info-popup>\n        </label>\n      </div>\n\n    </div>\n\n  </div>\n\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sqy-export-modal',\n  templateUrl: './export-modal.component.html',\n  styleUrls: ['./export-modal.component.scss']\n})\nexport class ExportModalComponent {\n\n  list: any[] = [];\n  _items: any[];\n  to = 'gb';\n\n  @Input() set items(items: any[]) {\n    if (items.length > 0) {\n      this._items = items;\n      this.list = this._items.map(f => f.alias);\n    }\n  }\n\n  featChange(alias: string, isChecked: boolean) {\n    isChecked ? this.list.push(alias) : this.list = this.list.filter(f => f !== alias);\n  }\n\n}\n","<form class=\"ui tiny form\" *ngIf=\"option\">\n\n  <div class=\"two fields\">\n\n    <div class=\"field\">\n      <label>Option</label>\n      <nz-select name=\"operator\" nzSize=\"small\" nzPlaceHolder=\"Operator\" required [(ngModel)]=\"op\">\n        <nz-option *ngFor=\"let o of operators\" [nzLabel]=\"o.desc\" [nzValue]=\"o.op\"></nz-option>\n      </nz-select>\n    </div>\n\n    <div class=\"field\">\n      <label>Value</label>\n      <input type=\"number\" name=\"value\" placeholder=\"Enter a value\" required [(ngModel)]=\"value\"/>\n    </div>\n\n  </div>\n\n</form>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sqy-set-cutoff',\n  templateUrl: './set-cutoff.component.html',\n  styleUrls: ['./set-cutoff.component.scss']\n})\nexport class SetCutoffComponent {\n\n  @Input() option: any = null;\n\n  operators = [\n    { desc: 'Greater or equal than', op: '<=' },\n    { desc: 'Greater than', op: '<' },\n    { desc: 'Equal to', op: '=' },\n    { desc: 'Lower or equal than', op: '>=' },\n    { desc: 'Lower than', op: '>' }\n  ];\n  op = this.operators[0].op;\n  value: number;\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'sqy-set-highlight',\n  templateUrl: './set-highlight.component.html',\n  styleUrls: ['./set-highlight.component.scss']\n})\nexport class SetHighlightComponent implements OnInit {\n\n  @Input() max: number;\n  @Output() onSet = new EventEmitter<string>();\n  highlightForm: FormGroup;\n\n  constructor(private builder: FormBuilder) { }\n\n  get from() {\n    return this.highlightForm.get('from');\n  }\n\n  get to() {\n    return this.highlightForm.get('to');\n  }\n\n  ngOnInit(): void {\n    this.highlightForm = this.builder.group({\n      from: [1, Validators.compose([\n        Validators.min(1),\n        Validators.required,\n        Validators.max(this.max - 1)\n      ])],\n      to: [this.max, Validators.compose([\n        Validators.required,\n        Validators.min(1),\n        Validators.max(this.max)\n      ])]\n    });\n  }\n\n  set() {\n    if (this.from.value <= this.to.value) {\n      this.onSet.emit(`${this.from.value}:${this.to.value}`);\n    }\n  }\n\n}\n","<form class=\"ui tiny form\" [formGroup]=\"highlightForm\" (ngSubmit)=\"set()\">\n\n  <div class=\"field\">\n    <span class=\"meta\">Enter positions to define highlight area.</span>\n  </div>\n\n  <div class=\"fields\">\n\n    <div class=\"field\" [ngClass]=\"{'error': from.invalid && (from.dirty || from.touched)}\">\n      <label>From</label>\n      <input type=\"number\" placeholder=\"From\" required name=\"highl-from\" formControlName=\"from\">\n    </div>\n\n    <div class=\"field\" [ngClass]=\"{'error': to.invalid && (to.dirty || to.touched)}\">\n      <label>To</label>\n      <input type=\"number\" placeholder=\"Max: {{max}}\" required name=\"highl-to\" formControlName=\"to\">\n    </div>\n\n  </div>\n\n  <div class=\"field\">\n    <button type=\"submit\" class=\"ui fluid primary button\" [disabled]=\"highlightForm.invalid\">Set</button>\n  </div>\n\n</form>\n","<div class=\"ui vertically divided grid\" style=\"margin-bottom: 4em\">\n\n  <div class=\"equal width center aligned middle aligned row\" style=\"padding: 0em\">\n\n    <div class=\"column\">\n      <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"hgMenu\" nzPlacement=\"bottomCenter\">\n        Highlight\n        <i class=\"dropdown icon\"></i>\n      </a>\n    </div>\n\n    <div class=\"column\">\n      <a (click)=\"exportModal()\">\n        <i class=\"download icon\"></i>\n        Export\n      </a>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"ui icon fluid input\" [ngClass]=\"{'loading disabled': isSearching}\">\n        <i class=\"search icon\"></i>\n        <input type=\"text\" placeholder=\"Search for motif\" (keyup.enter)=\"searchMotif($event.target.value)\">\n      </div>\n    </div>\n\n    <div class=\"column\">\n      <p>\n        <i class=\"zoom icon\"></i> Use <strong>Ctrl</strong> + <strong>Scroll</strong> to zoom.\n      </p>\n    </div>\n\n    <div class=\"column\">\n      <protvista-saver element-id=\"results-graphs\" #saver file-name=\"sqrutiny_result\">\n        <button class=\"ui primary button\">\n          Download as PNG\n        </button>\n      </protvista-saver>\n    </div>\n\n  </div>\n\n  <div class=\"one column row\">\n\n    <div class=\"column mt-0\">\n\n      <protvista-manager attributes=\"length displaystart displayend highlight\">\n        <div class=\"ui very padded grid graphs\">\n\n          <div class=\"one column row\" id=\"results-graphs\">\n\n            <div class=\"column mb-3\">\n              <protvista-navigation #navigator class=\"protvista\"></protvista-navigation>\n              <protvista-sequence class=\"protvista\" highlight-event=\"onmouseover\" use-ctrl-to-zoom #dnaSeq></protvista-sequence>\n              <protvista-sequence class=\"protvista\" highlight-event=\"onmouseover\" use-ctrl-to-zoom #proteinSeq></protvista-sequence>\n              <protvista-interpro-track class=\"protvista\" shape=\"roundRectangle\" use-ctrl-to-zoom highlight-event=\"onmouseover\" #tracksView></protvista-interpro-track>\n            </div>\n\n            <div class=\"column no-sv\">\n              <p class=\"meta\">Click on each feature to show or hide</p>\n            </div>\n\n            <div class=\"column no-sv\">\n\n              <div class=\"ui top attached menu\">\n\n                <div class=\"item\">\n                  <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"graphsMenu\">\n                    <i class=\"cogs icon\"></i>\n                    Graphs\n                    <i class=\"dropdown icon\"></i>\n                  </a>\n                </div>\n\n                <a class=\"item\" *ngFor=\"let o of options\" [ngClass]=\"{'non-active': !o.display}\" (click)=\"o.display = !o.display\">\n                  <i class=\"circle icon\" [style.color]=\"o.color\"></i>\n                  <p class=\"feat-label\">{{o.name}}</p>\n                </a>\n\n              </div>\n\n            </div>\n\n            <div class=\"column pt-4\" [hidden]=\"!op.display\" *ngFor=\"let op of options; let i = index\">\n\n              <div class=\"ui padded grid\">\n\n                <div class=\"row\">\n                  <div class=\"column\">\n                    <h3 class=\"ui horizontal divider header\">{{op.name}}</h3>\n                  </div>\n                </div>\n\n                <div class=\"three column row mb-2 no-sv\">\n\n                  <div class=\"column s-action\">\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"acMenu\">\n                      Chart\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"dataMenu\">\n                      Data\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"sExMenu\">\n                      Export\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"cutMenu\">\n                      Cutoff\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n\n                    <!-- Action -->\n                    <nz-dropdown-menu #acMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"changeColors(op.alias)\">\n                          <i class=\"sync icon\"></i>\n                          Change color\n                        </li>\n                        <li nz-menu-item (click)=\"op.display = false\">\n                          <i class=\"eye slash icon\"></i>\n                          Hide\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <!-- Data -->\n                    <nz-dropdown-menu #dataMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"displayScore(op.alias)\">\n                          <i class=\"eye icon\"></i>\n                          Display all scores\n                        </li>\n                        <li nz-menu-item [nzDisabled]=\"!op.cutoffs\" (click)=\"displayCutoffs(op.alias)\">\n                          <i class=\"eye icon\"></i>\n                          Display cutoffs positions\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <!-- Single Graph Export -->\n                    <nz-dropdown-menu #sExMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"exportToExcel(op.alias)\">\n                          <i class=\"file excel outline icon\"></i>\n                          Excel\n                        </li>\n                        <li nz-menu-item (click)=\"exportToGb({key: op.alias})\">\n                          <i class=\"dna icon\"></i>\n                          GenBank\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <!-- Cutoff -->\n                    <nz-dropdown-menu #cutMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"cutoffModal(op.alias)\">\n                          Set cutoff\n                        </li>\n                        <!-- <li nz-menu-item>\n                          Set cutoff for minimum\n                        </li>\n                        <li nz-menu-item>\n                          Set cutoff for maximum\n                        </li> -->\n                        <li nz-menu-item [nzDisabled]=\"!op.cutoffs\" (click)=\"displayCutoffs(op.alias)\">\n                          <i class=\"eye icon\"></i>\n                          Display cutoffs positions\n                        </li>\n                        <li nz-submenu nzTitle=\"Download current threshold\" [nzDisabled]=\"!op.cutoffs\">\n                          <ul>\n                            <li nz-menu-item (click)=\"exportCutoffToGb(op.alias)\">\n                              <i class=\"dna icon\"></i> Download as GenBank\n                            </li>\n                            <li nz-menu-item (click)=\"exportCutoffToExcel(op.alias)\">\n                              <i class=\"file excel outline icon\"></i> Download as Excel\n                            </li>\n                          </ul>\n                        </li>\n                        <li nz-menu-item [nzDisabled]=\"!op.cutoffs\" (click)=\"clearCutoffs(op.alias)\">\n                          <i class=\"eraser icon\"></i> Clear cutoffs positions\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                  </div>\n\n                  <div class=\"column txt-c cutoff\" id=\"cutoff_{{op.alias}}\" style=\"visibility: hidden\">\n                    <p></p>\n                  </div>\n\n                  <div class=\"column right aligned\">\n                    <div class=\"ui dropdown\" nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"vlMenu\">\n                      <div class=\"text\">\n                        <strong>Values: </strong>{{op.type === 'raw' ? 'Raw' : 'Normalized'}}\n                      </div>\n                      <i class=\"dropdown icon\"></i>\n                    </div>\n\n                    <!-- Values -->\n                    <nz-dropdown-menu #vlMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"switchScore(op.alias, 'raw')\">\n                          Raw <i [hidden]=\"op.type !== 'raw'\" class=\"check small icon\"></i>\n                        </li>\n                        <li nz-menu-item (click)=\"switchScore(op.alias, 'norm')\">\n                          Normalized <i [hidden]=\"op.type !== 'norm'\" class=\"check small icon\"></i>\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <sqy-info-popup [content]=\"op.description\"></sqy-info-popup>\n\n                  </div>\n\n                </div>\n\n              </div>\n\n              <sqrutiny-matrix class=\"protvista score-graph\" id=\"{{op.alias}}\" height=\"70\" use-ctrl-to-zoom></sqrutiny-matrix>\n\n              <div class=\"ui two column grid no-sv\">\n\n                <div class=\"column\">\n                  <span class=\"meta\" style=\"font-size: .9em !important;\">\n                    Min: <strong>{{op.min}}</strong>\n                  </span>\n                </div>\n\n                <div class=\"column right aligned\">\n                  <span class=\"meta\" style=\"font-size: .9em !important;\">\n                    Max: <strong>{{op.max}}</strong>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </protvista-manager>\n\n    </div>\n\n  </div>\n\n</div>\n\n<!-- Menus -->\n\n<!-- Visibility -->\n<nz-dropdown-menu #graphsMenu=\"nzDropdownMenu\">\n  <ul nz-menu nzSelectable>\n    <li nz-menu-item (click)=\"displayAll()\">\n      <i class=\"eye icon\"></i>\n      Display all\n    </li>\n    <li nz-menu-item (click)=\"hideAll()\">\n      <i class=\"eye icon\"></i>\n      Hide all\n    </li>\n    <li nz-menu-item (click)=\"changeColors()\">\n      <i class=\"sync icon\"></i>\n      Change colors\n    </li>\n  </ul>\n</nz-dropdown-menu>\n\n<!-- Highlight -->\n<nz-dropdown-menu #hgMenu=\"nzDropdownMenu\">\n  <ul nz-menu nzSelectable>\n    <li nz-menu-item nz-popover nzType=\"primary\" nzPopoverTrigger=\"click\" nzPopoverTitle=\"Set highlight by positions\" [nzPopoverContent]=\"hgTmplt\">\n      <i class=\"crosshairs icon\"></i>\n      Set highlight\n    </li>\n    <li nz-menu-item (click)=\"clearHighlight()\">\n      <i class=\"eraser icon\"></i>\n      Clear highlight\n    </li>\n  </ul>\n</nz-dropdown-menu>\n\n<!-- Popover templates -->\n<ng-template #hgTmplt>\n  <sqy-set-highlight [max]=\"_data.construct.dna_seq.length\" (onSet)=\"setHighlight($event)\"></sqy-set-highlight>\n</ng-template>\n","import { Component, Input, AfterViewInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzModalService, NzModalRef } from 'ng-zorro-antd/modal';\nimport { ProtvistaSequence } from 'protvista-sequence';\nimport { ProtvistaSaver } from 'protvista-saver';\nimport { ProtVistaNavigation } from '@vendor/protvista-navigation';\nimport { ProtVistaInterproTrack } from 'protvista-interpro-track';\n\nimport { SqrutinyService } from '@services/sqrutiny.service';\nimport { Track } from 'app/optimizer/shared/track';\nimport { DisplayValuesComponent } from '../display-values/display-values.component';\nimport { HistoryService } from '../history.service';\nimport { FileService } from '@services/file.service';\nimport { LoaderService } from '@services/loader.service';\nimport { ExportModalComponent } from '../export-modal/export-modal.component';\nimport { FeatureService } from 'app/optimizer/shared/feature.service';\nimport { Feature } from 'app/optimizer/shared/feature';\nimport { SetCutoffComponent } from '../set-cutoff/set-cutoff.component';\n\nclass GraphsOption {\n  name?: string;\n  alias: string;\n  description?: string;\n  display: boolean;\n  data: any;\n  max?: number;\n  min?: number;\n  type: string;\n  cutoffs?: number[];\n  color: string;\n}\n\nclass Filter {\n  alias: string;\n  value: number;\n  op: string;\n  type: string;\n}\n\n@Component({\n  selector: 'sqy-result-viewer',\n  templateUrl: './result-viewer.component.html',\n  styleUrls: ['./result-viewer.component.scss']\n})\nexport class ResultViewerComponent implements AfterViewInit, OnDestroy {\n\n  @Input() set data(data: any) {\n    console.log('Test')\n    console.log(data)\n    this._data = [];\n    this.options = [];\n    if (!data.result || !data.construct || !data.result.length) {\n      return;\n    }\n    this._data = data;\n    this.loader.startLoading();\n    this._data.result.map((r: any) => {\n      this.options.push({\n        alias: r.alias,\n        display: true,\n        data: this.generateScores(),\n        type: 'raw',\n        color: this.getRandomColor()\n      });\n    });\n    this.getFeatures();\n  }\n\n  _data: any = null; // Original data\n  isSearching = false;\n  options: GraphsOption[] = [];\n  filters: Filter[] = [];\n  tplModal: NzModalRef;\n  operators = [\n    { desc: 'Greater or equal than', op: '<=' },\n    { desc: 'Greater than', op: '<' },\n    { desc: 'Equal to', op: '=' },\n    { desc: 'Lower or equal than', op: '>=' },\n    { desc: 'Lower than', op: '>' }\n  ];\n  operatorsFn = {\n    '<': (a: number, b: number) => a < b,\n    '<=': (a: number, b: number) => a <= b,\n    '=': (a: number, b: number) => a === b,\n    '>': (a: number, b: number) => a > b,\n    '>=': (a: number, b: number) => a >= b,\n  };\n\n  @ViewChild('dnaSeq') dnaSeq: ElementRef<ProtvistaSequence>;\n  @ViewChild('proteinSeq') proteinSeq: ElementRef<ProtvistaSequence>;\n  @ViewChild('tracksView') tracksElem: ElementRef<ProtVistaInterproTrack>;\n  @ViewChild('navigator') nav: ElementRef<ProtVistaNavigation>;\n  @ViewChild('saver') saver: ElementRef<ProtvistaSaver>;\n\n  constructor(\n    private sqSrvc: SqrutinyService,\n    private notify: NzMessageService,\n    private modal: NzModalService,\n    private fileSrvc: FileService,\n    private historySrvc: HistoryService,\n    private route: ActivatedRoute,\n    private loader: LoaderService,\n    private featureSrvc: FeatureService\n  ) { }\n\n  generateScores(){\n    let scores = []\n    for (let i = 0; i < this._data.construct.dna_seq.length; i++) {\n      scores.push ( {pos: i+1, score: Math.random() * 1})\n    }\n    return scores\n  }\n\n  ngAfterViewInit() {\n    // Init graphs\n    if (this._data && this.options) {\n\n      this.nav.nativeElement.length = this._data.construct.dna_seq.length;\n      document.querySelectorAll('.protvista').forEach((x: any) => x.setAttribute('length', this._data.construct.dna_seq.length));\n      this.dnaSeq.nativeElement.data = this._data.construct.dna_seq;\n      this.proteinSeq.nativeElement.data = this.toProteinSeqVw(this._data.construct.protein_seq);\n      this.tracksElem.nativeElement.data = this.getTrackView(this._data.construct.tracks);\n      document.querySelectorAll('.score-graph').forEach((x: any, i: number) => {\n        x.data = this.options[i].data;\n        x.color = this.options[i].color;\n      });\n      this.saver.nativeElement.preSave = () => {\n        this.loader.startLoading();\n        const base = document.querySelector('#results-graphs');\n        const title = document.createElement('h1');\n        title.setAttribute('id', 'tmp_title_element');\n        title.innerHTML = 'SQrutiny Result Snapshot';\n        base.insertBefore(title, base.firstChild);\n        base.querySelectorAll('.no-sv').forEach((element: HTMLElement) => element.style.display = 'none');\n        base.querySelectorAll('h3').forEach((element: HTMLElement) => element.style.fontSize = '12px');\n      };\n      this.saver.nativeElement.postSave = () => {\n        const base = document.querySelector('#results-graphs');\n        base.removeChild(document.getElementById('tmp_title_element'));\n        base.querySelectorAll('.no-sv').forEach((element: HTMLElement) => element.style.display = 'inherit');\n        base.querySelectorAll('h3').forEach((element: HTMLElement) => element.style.fontSize = '1.28571429rem');\n        this.loader.stopLoading();\n      };\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyModal();\n  }\n\n  private getTrackView(tracks: Track[]) {\n    return tracks.map((track: Track) => ({\n      accession: 'XXXXX',\n      start: track.start,\n      end: track.end,\n      color: track.color\n    }));\n  }\n\n  private toProteinSeqVw(val: string) {\n    return ` ${val.split('').join('  ')} `;\n  }\n\n  private getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  displayAll() {\n    this.options.map(x => x.display = true);\n  }\n\n  hideAll() {\n    this.options.map(x => x.display = false);\n  }\n\n  setHighlight(pos: string) {\n    if (pos) {\n      document.querySelectorAll('.protvista').forEach((x: any) => x.fixedHighlight = pos);\n    }\n  }\n\n  clearHighlight() {\n    document.querySelectorAll('.protvista').forEach((x: any) => x.fixedHighlight = undefined);\n  }\n\n  clearCutoffs(alias: string) {\n    /* tslint:disable:no-string-literal */\n    document.getElementById(alias)['cutoffs'] = undefined;\n    this.getByAlias(this.options, alias).cutoffs = null;\n    this.filters = this.filters.filter(f => f.alias !== alias);\n    document.getElementById('cutoff_' + alias).getElementsByTagName('p')[0].innerHTML = '';\n    document.getElementById('cutoff_' + alias).style.visibility = 'hidden';\n    /* tslint:enable:no-string-literal */\n  }\n\n  clearAllCutoffs() {\n    document.querySelectorAll('.score-graph').forEach((x: any) => x.cutoffs = undefined);\n    this.options.map(op => op.cutoffs = null);\n    this.filters = [];\n    document.querySelectorAll('.cutoff').forEach((c: HTMLElement) => c.style.visibility = 'hidden');\n  }\n\n  cutoffModal(alias: string) {\n    const op = this.getByAlias(this.options, alias);\n    if (op) {\n      this.tplModal = this.modal.create({\n        nzTitle: 'Set cutoff for ' + op.name,\n        nzContent: SetCutoffComponent,\n        nzWidth: 450,\n        nzComponentParams: {\n          option: op\n        },\n        nzOnOk: (cmp: SetCutoffComponent) => {\n          if (cmp.op !== null && cmp.value !== null && !Number.isNaN(cmp.value)) {\n            this.setThreshold({ alias, value: cmp.value, op: cmp.op, type: op.type });\n          }\n        }\n      });\n      this.tplModal.afterClose.subscribe(() => this.destroyModal());\n    }\n  }\n\n  private setThreshold(filter: Filter) {\n    if (filter.alias && filter.op && filter.value !== null) {\n      let values = [];\n      const op = this.getByAlias(this.options, filter.alias);\n      values = op.data.filter((d: any) => {\n        if (this.operatorsFn[filter.op](filter.value, d.score)) {\n          return {\n            pos: d.pos,\n            score: d.score\n          };\n        }\n      });\n      const operator = this.operators.find(o => o.op === filter.op);\n      if (values.length) {\n        op.cutoffs = values;\n        this.filters.push(filter);\n        /* tslint:disable:no-string-literal */\n        document.getElementById(filter.alias)['cutoffs'] = values.map((v: any) => v.pos);\n        /* tslint:enable:no-string-literal */\n        const element = document.getElementById('cutoff_' + filter.alias).getElementsByTagName('p')[0];\n        element.innerHTML = `<i class='filter icon'></i> ${operator.desc} ${filter.value}`;\n        element.style.visibility = 'visible';\n      } else {\n        this.clearCutoffs(filter.alias);\n        this.notify.info(`No results found for: ${operator.desc} ${filter.value} in ${op.name}`);\n      }\n    }\n  }\n\n  displayScore(alias: string) {\n    const data = this.getByAlias(this._data.result, alias);\n    this.valuesModal(data.scores, ['Start', 'End', 'Raw values', 'Normalized values'], this.getByAlias(this.options, alias).name + ' data');\n  }\n\n  displayCutoffs(alias: string) {\n    const op = this.getByAlias(this.options, alias);\n    this.valuesModal(op.cutoffs, ['Position', 'Score'], op.name + ' cutoff positions');\n  }\n\n  private valuesModal(values: any[], headers: string[], title?: string) {\n    this.tplModal = this.modal.create({\n      nzContent: DisplayValuesComponent,\n      nzWrapClassName: 'center-modal',\n      nzComponentParams: {\n        headers,\n        values,\n        title\n      },\n      nzFooter: null,\n    });\n    this.tplModal.afterClose.subscribe(() => this.destroyModal());\n  }\n\n  changeColors(alias?: string) {\n    if (alias) {\n      const op = this.getByAlias(this.options, alias);\n      op.color = this.getRandomColor();\n      /* tslint:disable:no-string-literal */\n      document.getElementById(alias)['color'] = op.color;\n      /* tslint:enable:no-string-literal */\n    } else {\n      this.options.forEach(o => o.color = this.getRandomColor());\n      document.querySelectorAll('.score-graph').forEach((x: any, i: number) => x.color = this.options[i].color);\n    }\n  }\n\n  switchScore(alias: string, type: string) {\n    const data = this.getByAlias(this._data.result, alias);\n    if (data) {\n      const op = this.getByAlias(this.options, alias);\n      this.clearCutoffs(op.alias);\n      op.data = data.scores.map((s: any) => ({\n        pos: s.start,\n        score: type === 'raw' ? s.raw_score : s.norm_score\n      }));\n      /* tslint:disable:no-string-literal */\n      document.getElementById(alias)['data'] = op.data;\n      /* tslint:enable:no-string-literal */\n      op.type = type;\n    }\n  }\n\n  searchMotif(motif: any) {\n    if (motif) {\n      this.isSearching = true;\n      this.sqSrvc.motifInSeq(this._data.construct.dna_seq, motif)\n        .pipe(finalize(() => this.isSearching = false))\n        .subscribe(\n          (data: any) => {\n            if (data.count > 0) {\n              let positions = '';\n              data.data.map((pos: number[]) => positions += `,${pos[0]}:${pos[1]}`);\n              if (positions.charAt(0) === ',') {\n                positions = positions.substring(1);\n              }\n              document.querySelectorAll('.protvista').forEach((x: any) => x.fixedHighlight = positions);\n            } else {\n              this.notify.error('No match was found');\n            }\n          },\n          err => this.notify.error(err)\n        );\n    }\n  }\n\n  private getFeatures() {\n    this.loader.startLoading();\n    this.featureSrvc\n      .getAll()\n      .subscribe(data => {\n        const features = data.map((e: any) => new Feature().deserialize(e));\n        this.options.map(o => {\n          const ft = features.find(f => f.alias === o.alias);\n          if (ft) {\n            o.name = ft.name;\n            o.description = ft.description;\n            o.min = ft.genome_min;\n            o.max = ft.genome_max;\n          }\n        });\n        this.loader.stopLoading();\n      }\n      );\n  }\n\n  // Export\n\n  exportCutoffToGb(alias: string) {\n    const filter = this.getByAlias(this.filters, alias);\n    if (filter) {\n      this.exportToGb([{ key: alias, filter }]);\n    }\n  }\n\n  exportModal() {\n    this.tplModal = this.modal.create({\n      nzTitle: 'Export wizard',\n      nzContent: ExportModalComponent,\n      nzComponentParams: {\n        items: this.options.map(o => ({ name: o.name, color: o.color, alias: o.alias }))\n      },\n      nzWidth: 700,\n      nzOkText: 'Export',\n      nzOnOk: (cmp: ExportModalComponent) => cmp.to === 'gb' ? this.exportToGb(cmp.list.map(l => ({ key: l })) || []) : this.exportToExcel(cmp.list || []),\n    });\n    this.tplModal.afterClose.subscribe(() => this.destroyModal());\n  }\n\n  destroyModal() {\n    if (this.tplModal) {\n      this.tplModal.destroy();\n    }\n  }\n\n  exportToGb(options: any) {\n    this.loader.startLoading();\n    if (options && !Array.isArray(options)) {\n      options = [options];\n    }\n    this.historySrvc.export(this.route.snapshot.data.history.id, { options: options || null })\n      .pipe(finalize(() => this.loader.stopLoading()))\n      .subscribe((d: any) => {\n        this.notify.success('Your download is about to start.');\n        this.fileSrvc.saveFileAs(d.data, d.mimetype, d.filename);\n      },\n        err => this.notify.error(err)\n      );\n  }\n\n  exportCutoffToExcel(alias?: string[]) {\n    let data = [];\n    if (alias) {\n      if (!Array.isArray(alias)) {\n        alias = [alias];\n      }\n      alias.map(a => {\n        const op = this.getByAlias(this.options, a);\n        if (op.cutoffs) {\n          data = [{ name: op.name, data: op.cutoffs }];\n        }\n      });\n    } else {\n      data = this.options.filter((o: GraphsOption) => !o.cutoffs);\n    }\n    if (data.length > 0) {\n      this.fileSrvc.exportAsExcelFile(data, data.length === 1 ? alias[0] : 'scores');\n      this.notify.success('Exported! Your download is about to start.');\n    } else {\n      this.notify.error('Unable to export.');\n    }\n  }\n\n  exportToExcel(alias?: string[]) {\n    let data = [];\n    if (alias) {\n      if (!Array.isArray(alias)) {\n        alias = [alias];\n      }\n      alias.map(a => {\n        const op = this.getByAlias(this._data.result, a);\n        data.push({ name: op.alias, data: op.scores });\n      });\n    } else {\n      data = this._data.result.map((v: any) => ({ name: v.alias, data: v.scores }));\n    }\n    if (data.length > 0) {\n      this.fileSrvc.exportAsExcelFile(data, data.length === 1 ? alias[0] : 'scores');\n      this.notify.success('Exported! Your download is about to start.');\n    } else {\n      this.notify.error('Unable to export.');\n    }\n  }\n\n  private getByAlias(data: any[], alias: string): any {\n    return data.find(o => o.alias === alias);\n  }\n}\n","<!-- Loading placeholder -->\n<sqy-history-loading *ngIf=\"!history\"></sqy-history-loading>\n\n<div class=\"ui main fluid container p-4 mt-6 basic segment\" [ngClass]=\"{'loading': isLoading}\" *ngIf=\"history\">\n\n  <div class=\"ui grid\">\n\n    <div class=\"row\" id=\"history\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded one column grid\">\n\n            <div class=\"column\">\n              <h1 class=\"ui header\">\n                {{history.name}}\n              </h1>\n            </div>\n\n            <div class=\"two column row\">\n\n              <div class=\"column\">\n                <span class=\"date\">\n                  <time [dateTime]=\"history.created_at\">{{history.created_at | date: 'DD MMMM, YYYY HH:mm'}}</time>\n                </span>\n                <div [hidden]=\"!history.job\" class=\"ant-badge ant-badge-status ant-badge-not-a-wrapper\">\n                  <span class=\"ant-badge-status-dot\" [ngClass]=\"{'ant-badge-status-error': history.hasFailed(), 'ant-badge-status-processing': history.isActive(), 'ant-badge-status-success': history.isDone()}\"></span>\n                  <span class=\"ant-badge-status-text\">{{history.job?.status | titlecase}}</span>\n                </div>\n              </div>\n\n              <div class=\"column txt-r\">\n\n                <a class=\"m-4\" *ngIf=\"history.isActive()\" (click)=\"getJob()\">\n                  <i class=\"sync icon\"></i>\n                  Refresh content\n                </a>\n\n                <a class=\"m-4 delete\" (click)=\"deleteHistory()\">\n                  <i class=\"trash icon\"></i>\n                  Delete history\n                </a>\n\n              </div>\n\n            </div>\n\n            <div class=\"eleven wide column\">\n              <div class=\"ui very relaxed horizontal selection large list\">\n                <div class=\"item\">\n                  <i class=\"barcode large icon\"></i>\n                  <div class=\"content\">\n                    <a class=\"header\" onclick=\"window.location.hash = 'construct'\">Construct</a>\n                    <p>Check Construct details</p>\n                  </div>\n                </div>\n                <div class=\"item\">\n                  <i class=\"chart bar outline large icon\"></i>\n                  <div class=\"content\">\n                    <a class=\"header\" onclick=\"window.location.hash = 'results'\">Plot area</a>\n                    <p>Go to results visualizator area</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"five wide column right aligned\">\n              <div class=\"ui action fluid input\">\n                <input type=\"text\" [value]=\"history.id\" name=\"history-id\">\n                <button type=\"button\" class=\"ui right labeled icon primary button\" name=\"copy\" [sqy-clipboard]=\"history.id\">\n                  Copy <i class=\"copy icon\"></i>\n                </button>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"row\" id=\"construct\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded form construct-summary grid\">\n\n            <div class=\"one column row\">\n              <div class=\"column txt-c\">\n                <h2>Construct summary</h2>\n              </div>\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n\n                <div class=\"field\" [hidden]=\"!history.construct.description\">\n                  <p>{{history.construct.description}}</p>\n                </div>\n\n                <div class=\"four inline fields\">\n\n                  <div class=\"field\">\n                    <label>Label:</label>\n                    {{history.construct.name}}\n                  </div>\n\n                  <div class=\"field\">\n                    <label>Number of tracks:</label>\n                    {{history.construct.n_tracks}}\n                  </div>\n\n                  <div class=\"field\">\n                    <label>Circular:</label>\n                    <i class=\"circle icon\" [ngClass]=\"{'check green': history.construct.circular, 'times red': !history.construct.circular}\"></i>\n                  </div>\n\n                  <div class=\"field\">\n                    <a routerLink=\"/optimize/sketcher\" [queryParams]=\"{construct: history.construct.id}\">See it on Sketcher <i class=\"external link icon\"></i> </a>\n                  </div>\n\n                  <div class=\"field\">\n                    <a [routerLink]=\"['/editor', history.id]\">See it on Vector Editor <i class=\"external link icon\"></i> </a>\n                  </div>\n\n                </div>\n\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  <i class=\"bug icon\"></i>\n                  Organism\n                </h4>\n              </div>\n\n              <div class=\"column\">\n                <p>Open on <a [href]=\"history.construct.specie?.tax_link\" target=\"_blank\">NCBI Taxonomy browser</a> organism info</p>\n\n                <div class=\"two inline fields\">\n                  <div class=\"inline field\">\n                    <label>Name:</label>\n                    <a [href]=\"history.construct.specie?.tax_link\" target=\"_blank\">\n                      {{history.construct.specie?.name}}\n                    </a>\n                  </div>\n                  <div class=\"inline field\">\n                    <label>Taxonomy ID:</label>\n                    {{history.construct.specie?.tax_id}}\n                  </div>\n                </div>\n\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  <i class=\"dna icon\"></i>\n                  Sequence\n                </h4>\n              </div>\n\n              <div class=\"column\">\n                <p> <i class=\"info icon\"></i> Click on sequence to display full content</p>\n\n                <table class=\"ui blue padded sequence definition table\">\n\n                  <tbody>\n                    <tr>\n                      <th>DNA</th>\n                      <td class=\"link\" (click)=\"textModal(history.construct.dna_seq)\">\n                        {{history.construct.dna_seq}}\n                      </td>\n                      <td>\n                        <strong>Total:</strong>\n                        {{history.construct.dna_seq.length}} bps\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Protein</th>\n                      <td class=\"link\" (click)=\"textModal(history.construct.protein_seq)\">\n                        {{history.construct.protein_seq}}\n                      </td>\n                      <td>\n                        <strong>Total:</strong>\n                        {{history.construct.protein_seq.length}}\n                      </td>\n                    </tr>\n                  </tbody>\n\n                </table>\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  Tracks\n                </h4>\n              </div>\n\n              <div class=\"column\" style=\"min-height: 18px\">\n                <div class=\"ui grid\">\n                  <div class=\"four wide column\">\n                    <p> <i class=\"info icon\"></i> Hover a track to display information</p>\n                  </div>\n                  <div class=\"three wide column center aligned\" [hidden]=\"!trackHovered\">\n                    <strong>Start:</strong> {{trackHovered?.start}}\n                  </div>\n                  <div class=\"three wide column center aligned\" [hidden]=\"!trackHovered\">\n                    <strong>End:</strong> {{trackHovered?.end}}\n                  </div>\n                  <div class=\"three wide column center aligned\" [hidden]=\"!trackHovered\">\n                    <strong>Length:</strong> {{trackHovered?.sequence.length}} bps\n                  </div>\n                  <div class=\"right floated two wide column right aligned\">\n                    <p class=\"meta\">{{history.construct.n_tracks}} tracks</p>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"column\">\n\n                <div class=\"construct\">\n                  <div class=\"strand\">\n\n                    <div class=\"track\" (mouseover)=\"trackHovered = t\" (mouseout)=\"trackHovered = null\" (click)=\"showTrack(t)\" *ngFor=\"let t of history.construct.tracks; let i = index\">\n\n                      <div class=\"header\">\n                        <h4>{{t.label}}</h4>\n                      </div>\n                      <div class=\"image\" [ngStyle]=\"{background: 'url('+t.glyph_thumbnail+')', 'border-bottom': '1.5px solid '+t.color}\" data-inverted=\"\" [attr.data-tooltip]=\"t.name\" data-position=\"bottom center\"></div>\n                      <div class=\"index\">\n                        {{i + 1}}\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"one column row\" id=\"results\">\n\n      <div class=\"column\">\n        <div class=\"ui protvista padded grid\">\n\n          <div class=\"one column row\">\n\n            <div class=\"ui basic segment column\" [ngClass]=\"{'disabled loading': isJobLoading}\">\n\n              <div class=\"ui placeholder segment\" [hidden]=\"!history.job\" *ngIf=\"history.hasFailed()\">\n                <div class=\"ui icon header\">\n                  <i class=\"times circle red icon\"></i>\n                  It was not possible to show you the results due to an internal problem. Please try again later or <a [routerLink]=\"'/contact'\">contact us</a>.\n                </div>\n              </div>\n\n              <div class=\"ui placeholder segment\" [hidden]=\"!history.job\" *ngIf=\"history.isActive()\">\n                <div class=\"ui icon header\">\n                  <i class=\"spinner loading icon\"></i>\n                  The results are processing please be patient...\n                </div>\n                <button class=\"ui primary right labeled icon button\" (click)=\"getJob()\" [disabled]=\"isJobLoading\" type=\"button\" name=\"refresh\">\n                  Refresh <i class=\"sync icon\"></i>\n                </button>\n              </div>\n\n              <sqy-result-viewer [data]=\"resultData\" *ngIf=\"history.isDone()\"></sqy-result-viewer>\n\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { UserHistory } from '../shared/user-history';\nimport { HistoryService } from '../shared/history.service';\nimport { JobService } from '../shared/job.service';\nimport { Job } from '../shared/job';\nimport { Construct } from '@models/construct';\nimport { TextModalComponent } from '@components/text-modal/text-modal.component';\nimport { TitleService } from '@services/title.service';\nimport { Track } from 'app/optimizer/shared/track';\nimport { NavService } from '@services/nav.service';\nimport { TrackDisplayComponent } from '@components/track-display/track-display.component';\n\nconst MAX_ATTEMPTS = 50;\nconst RETRY_IN = 3000;\n\n@Component({\n  selector: 'sqy-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent implements OnInit, OnDestroy {\n\n  history: UserHistory = null;\n  isLoading = false;\n  isJobLoading = false;\n  resultData: { construct: Construct; result: any[] };\n  trackHovered: Track = null;\n  interval: any;\n  attempts = 0;\n  tplModal: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private historySrvc: HistoryService,\n    private jobSrvc: JobService,\n    private modal: NzModalService,\n    private notify: NzMessageService,\n    private titleSrvc: TitleService,\n    private navSrvc: NavService\n  ) { }\n\n  ngOnInit() {\n    this.history = new UserHistory().deserialize(this.route.snapshot.data.history);\n    this.titleSrvc.setTitle(this.history.name);\n    this.getJob();\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n    this.destroyModal();\n  }\n\n  getJob() {\n    this.isJobLoading = true;\n    this.jobSrvc.getById(this.history.job_id)\n      .pipe(finalize(() => {\n        this.isLoading = false;\n        this.isJobLoading = false;\n      }))\n      .subscribe(\n        (data: Job) => {\n          this.history.job = data;\n          if (this.history.isDone()) {\n            if (this.interval) {\n              clearInterval(this.interval);\n            }\n            this.resultData = { construct: this.history.construct, result: this.history.job.result };\n          } else if (this.history.isActive()) {\n            if (!this.interval) {\n              this.interval = setInterval(() => this.getJob(), RETRY_IN);\n              this.attempts = 0;\n            }\n            this.attempts++;\n            if (this.attempts >= MAX_ATTEMPTS) { clearInterval(this.interval); }\n          }\n        },\n        err => this.notify.error(err)\n      );\n  }\n\n  showTrack(track: Track) {\n    if (track) {\n      this.tplModal = this.modal.create({\n        nzContent: TrackDisplayComponent,\n        nzComponentParams: { track },\n        nzCancelText: null,\n        nzOnOk: () => {\n          if (this.tplModal) {\n            this.tplModal.destroy();\n          }\n        }\n      });\n      this.tplModal.afterClose.subscribe(() => this.destroyModal());\n    }\n  }\n\n  destroyModal() {\n    if (this.tplModal) {\n      this.tplModal.destroy();\n    }\n  }\n\n  deleteHistory() {\n    if (confirm('Are you sure?')) {\n      this.isLoading = true;\n      this.historySrvc.delete(this.history.id)\n        .pipe(finalize(() => this.isLoading = false))\n        .subscribe(() => {\n          this.navSrvc.updateBadge();\n          this.notify.success('History deleted!');\n          this.router.navigate(['/workspace']);\n        },\n          err => this.notify.error(err || 'Unable to delete history')\n        );\n    }\n  }\n\n  textModal(str: string) {\n    this.tplModal = this.modal.create({\n      nzContent: TextModalComponent,\n      nzWrapClassName: 'center-modal',\n      nzComponentParams: {\n        txt: str\n      },\n      nzFooter: null\n    });\n    this.tplModal.afterClose.subscribe(() => this.destroyModal());\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WorkspaceComponent } from './workspace.component';\nimport { HistoryComponent } from './history/history.component';\nimport { HistoryResolver } from './shared/history.resolver';\nimport { routes as rts } from '@config/routes';\n\nconst routes: Routes = [\n  { path: '', component: WorkspaceComponent },\n  { path: rts.workspace.detail, component: HistoryComponent, resolve: { history: HistoryResolver } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [HistoryResolver]\n})\nexport class WorkspaceRoutingModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\n\nimport { WorkspaceRoutingModule } from './workspace-routing.module';\nimport { WorkspaceComponent } from './workspace.component';\nimport { HistoryComponent } from './history/history.component';\nimport { HistoryLoadingComponent } from './shared/history-loading/history-loading.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ResultViewerComponent } from './shared/result-viewer/result-viewer.component';\nimport { DisplayValuesComponent } from './shared/display-values/display-values.component';\nimport { SetHighlightComponent } from './shared/set-highlight/set-highlight.component';\nimport { ExportModalComponent } from './shared/export-modal/export-modal.component';\nimport { SetCutoffComponent } from './shared/set-cutoff/set-cutoff.component';\n\n@NgModule({\n  declarations: [\n    WorkspaceComponent,\n    HistoryComponent,\n    HistoryLoadingComponent,\n    ResultViewerComponent,\n    DisplayValuesComponent,\n    SetHighlightComponent,\n    ExportModalComponent,\n    SetCutoffComponent\n  ],\n  imports: [\n    CommonModule,\n    WorkspaceRoutingModule,\n    SharedModule,\n    NzModalModule,\n    NzDropDownModule,\n    ReactiveFormsModule,\n    NzSelectModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class WorkspaceModule { }\n"]}
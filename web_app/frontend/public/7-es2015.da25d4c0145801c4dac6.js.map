{"version":3,"sources":["webpack:///src/app/workspace/workspace.component.html","webpack:///src/app/workspace/workspace.component.ts","webpack:///src/app/workspace/shared/job.service.ts","webpack:///src/app/workspace/shared/history-loading/history-loading.component.ts","webpack:///src/app/workspace/shared/history-loading/history-loading.component.html","webpack:///src/app/workspace/shared/display-values/display-values.component.html","webpack:///src/app/workspace/shared/display-values/display-values.component.ts","webpack:///src/app/workspace/shared/export-modal/export-modal.component.html","webpack:///src/app/workspace/shared/export-modal/export-modal.component.ts","webpack:///src/app/workspace/shared/set-cutoff/set-cutoff.component.html","webpack:///src/app/workspace/shared/set-cutoff/set-cutoff.component.ts","webpack:///src/app/workspace/shared/set-highlight/set-highlight.component.ts","webpack:///src/app/workspace/shared/set-highlight/set-highlight.component.html","webpack:///src/app/workspace/shared/results-viewer/results-viewer.component.html","webpack:///src/app/workspace/shared/results-viewer/results-viewer.component.ts","webpack:///src/app/workspace/history/history.component.html","webpack:///src/app/workspace/history/history.component.ts","webpack:///src/app/workspace/workspace-routing.module.ts","webpack:///src/app/workspace/workspace.module.ts"],"names":["WorkspaceComponent","router","historySrvc","notify","navSrvc","histories","isLoading","this","routeReuseStrategy","shouldReuseRoute","getUserHistory","getAll","pipe","finalize","subscribe","data","map","h","deserialize","confirm","deleteAll","updateBadge","success","msg","id","delete","clearHistory","JobService","http","url","endpoints","api","get","HistoryLoadingComponent","DisplayValuesComponent","fileSrvc","headers","values","objectKeys","Object","keys","exportAsExcelFile","name","exportToExcel","ExportModalComponent","list","to","items","length","_items","f","alias","isChecked","push","filter","SetCutoffComponent","option","operators","desc","op","SetHighlightComponent","builder","onSet","highlightForm","group","from","compose","min","required","max","value","emit","set","ResultsViewerComponent","sqSrvc","modal","route","loader","featureSrvc","_data","isSearching","options","filters","enzimes","operatorsFn","a","b","results","construct","startLoading","forEach","r","display","scores","d","pos","start","score","raw_score","Math","apply","type","color","getRandomColor","getFeatures","nav","nativeElement","dna_seq","document","querySelectorAll","x","setAttribute","dnaSeq","proteinSeq","toProteinSeqVw","protein_seq","tracksElem","getTrackView","tracks","i","track","accession","end","val","split","join","floor","random","fixedHighlight","undefined","getElementById","getByAlias","cutoffs","getElementsByTagName","innerHTML","style","visibility","c","create","nzTitle","nzContent","nzWidth","nzWrapClassName","nzComponentParams","nzOnOk","cmp","Number","isNaN","setThreshold","v","element","find","o","clearCutoffs","info","valuesModal","title","nzFooter","s","norm_score","motif","motifInSeq","count","positions","charAt","substring","error","err","features","e","ft","description","stopLoading","exportToGb","key","nzOkText","l","Array","isArray","export","snapshot","history","saveFileAs","mimetype","filename","exportModal","searchMotif","displayAll","hideAll","changeColors","clearHighlight","HistoryComponent","jobSrvc","titleSrvc","isJobLoading","seq","trackHovered","attempts","setTitle","getJob","interval","clearInterval","getById","job_id","job","isDone","resultData","result","isActive","setInterval","navigate","str","txt","path","component","workspace","detail","resolve","WorkspaceRoutingModule","forChild","WorkspaceModule"],"mappings":"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","file":"x","sourcesContent":["<div class=\"ui main container\">\n\n  <div class=\"ui padded grid p-4\">\n\n    <div class=\"one column row\">\n\n      <div class=\"column\">\n        <h1 class=\"ui header\">Recent history</h1>\n        <p>\n          Here you can find the history of all the <strong>jobs</strong> submitted.\n        </p>\n      </div>\n\n    </div>\n\n    <div class=\"two column row\">\n\n      <div class=\"column\">\n\n      </div>\n\n      <div class=\"column right aligned\">\n\n        <button type=\"button\" class=\"ui red right labeled icon button\" (click)=\"clearHistory()\" [disabled]=\"!isLoading && !histories.length\" name=\"button\">\n          Clear history <i class=\"trash icon\"></i>\n        </button>\n\n      </div>\n\n    </div>\n\n    <div class=\"one column row\">\n\n      <div class=\"column\">\n\n        <div class=\"ui placeholder segment\" *ngIf=\"!isLoading && !histories.length\">\n          <div class=\"ui icon header\">\n            <i class=\"list ul icon\"></i>\n            Yo have no history.\n          </div>\n        </div>\n\n        <div class=\"ui segment p-0\" [ngClass]=\"{'loading': isLoading}\" *ngIf=\"!isLoading && histories.length\">\n\n          <table class=\"ui very padded selectable basic table b-0\">\n\n            <thead>\n              <tr>\n                <th colspan=\"5\">\n                  Your history\n                </th>\n                <th class=\"right aligned\">\n                  {{histories.length}} entries\n                </th>\n              </tr>\n            </thead>\n\n            <tbody>\n\n              <tr [ngClass]=\"{'warning':  h.status != 'failed' && h.status != 'finished'}\" *ngFor=\"let h of histories\">\n                <td>\n                  <h3><a [routerLink]=\"[h.id]\">{{h.name}}</a></h3>\n                </td>\n                <td>\n                  <h3><a class=\"disabled\">{{h.construct.label}}</a></h3>\n                </td>\n                <td>\n                  {{h.construct.specie.name}}\n                </td>\n                <td>\n                  <time [dateTime]=\"h.created_at\">\n                    {{h.created_at | date: 'DD/MM/YYYY hh:mm'}}\n                  </time>\n                </td>\n                <td>\n                  <div class=\"ant-badge ant-badge-status ant-badge-not-a-wrapper link\" data-inverted=\"\" data-position=\"top center\" [attr.data-tooltip]=\"h.status | titlecase\">\n                    <span class=\"ant-badge-status-dot\" [ngClass]=\"{'ant-badge-status-error': h.status === 'failed',\n                      'ant-badge-status-success':  h.status === 'finished',\n                      'ant-badge-status-processing': h.status != 'failed' && h.status != 'finished'}\"></span>\n                  </div>\n                </td>\n                <td class=\"ui center aligned\">\n                  <a [sqy-clipboard]=\"h.id\" data-inverted=\"\" data-position=\"top center\" data-tooltip=\"Copy ID\">\n                    <i class=\"copy icon\"></i>\n                  </a>\n                  <a [routerLink]=\"['/editor', h.id]\" data-inverted=\"\" data-position=\"top center\" data-tooltip=\"Load on vector editor\">\n                    <i class=\"external link icon\"></i>\n                  </a>\n                  <a (click)=\"deleteHistory(h.id)\" data-inverted=\"\" data-position=\"top center\" data-tooltip=\"Delete\">\n                    <i class=\"trash link red icon\"></i>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { HistoryService } from './shared/history.service';\nimport { UserHistory } from './shared/user-history';\nimport { NavService } from '@services/nav.service';\n\n@Component({\n  selector: 'sqy-workspace',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.scss']\n})\nexport class WorkspaceComponent implements OnInit {\n\n  histories: UserHistory[] = [];\n  isLoading = false;\n\n  constructor(\n    private router: Router,\n    private historySrvc: HistoryService,\n    private notify: NzMessageService,\n    private navSrvc: NavService\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.getUserHistory();\n  }\n\n  getUserHistory() {\n    this.isLoading = true;\n    this.historySrvc.getAll()\n      .pipe(finalize(() => this.isLoading = false))\n      .subscribe(data => this.histories = data.map((h: any) => new UserHistory().deserialize(h)) || []);\n  }\n\n  clearHistory() {\n    if (confirm('Are you sure that you want to clear history?. This action cannot be reverted.')) {\n      this.isLoading = true;\n      this.historySrvc.deleteAll()\n        .pipe(finalize(() => this.isLoading = false))\n        .subscribe(data => {\n          this.navSrvc.updateBadge();\n          this.getUserHistory();\n          this.notify.success(data.msg);\n        });\n    }\n  }\n\n  deleteHistory(id: string) {\n    if (confirm('Are you sure that you want to delete such history?. This action cannot be reverted.')) {\n      this.isLoading = true;\n      this.historySrvc.delete(id)\n        .pipe(finalize(() => this.isLoading = false))\n        .subscribe(() => {\n          this.navSrvc.updateBadge();\n          this.getUserHistory();\n          this.notify.success('History deleted!');\n        });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment as env } from '@env/environment';\nimport { Job } from './job';\n\nconst URL_ENV = '/workspace/job/';\n\n@Injectable({ providedIn: 'root' })\nexport class JobService {\n\n  private url: string;  // URL to web api\n\n  constructor(private http: HttpClient) {\n    this.url = env.endpoints.api + URL_ENV;\n  }\n\n  getById(id: string): Observable<Job> {\n    return this.http.get<Job>(`${this.url}${id}`).pipe();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sqy-history-loading',\n  templateUrl: './history-loading.component.html',\n  styleUrls: ['./history-loading.component.scss']\n})\nexport class HistoryLoadingComponent {\n\n}\n","<div class=\"ui main fluid container p-4 mt-6\">\n\n  <div class=\"ui grid\">\n\n    <div class=\"row\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded one column grid\">\n\n            <div class=\"column\">\n              <div class=\"ui fluid placeholder\">\n                <div class=\"header\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"two column row\">\n\n              <div class=\"column\">\n\n              </div>\n\n              <div class=\"column txt-r\">\n\n                <a class=\"disabled\">\n                  <i class=\"trash icon\"></i>\n                  Delete history\n                </a>\n\n              </div>\n\n            </div>\n\n            <div class=\"column\">\n              <div class=\"ui fluid placeholder\">\n                <div class=\"paragraph\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"column\">\n              <div class=\"ui placeholder\">\n                <div class=\"paragraph\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"row\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded form grid\">\n\n            <div class=\"one column row\">\n              <div class=\"column txt-c\">\n                <h2>Construct summary</h2>\n              </div>\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n\n                <div class=\"field\">\n                  <div class=\"ui fluid placeholder\">\n                    <div class=\"paragraph\">\n                      <div class=\"line\"></div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"four inline fields\">\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"field\">\n                    <div class=\"ui fluid placeholder\">\n                      <div class=\"paragraph\">\n                        <div class=\"line\"></div>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  <i class=\"bug icon\"></i>\n                  Organism\n                </h4>\n              </div>\n\n              <div class=\"column\">\n                <div class=\"ui placeholder\">\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                  <div class=\"line\"></div>\n                </div>\n\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  <i class=\"dna icon\"></i>\n                  Sequence\n                </h4>\n              </div>\n\n              <div class=\"column\">\n                <p> <i class=\"info icon\"></i> Click on sequence to display full content</p>\n\n                <table class=\"ui blue padded sequence definition table\">\n\n                  <tbody>\n                    <tr>\n                      <th>DNA</th>\n                      <td class=\"link\">\n                      </td>\n                      <td>\n                        <strong>Total:</strong>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Protein</th>\n                      <td class=\"link\">\n                      </td>\n                      <td>\n                        <strong>Total:</strong>\n                      </td>\n                    </tr>\n                  </tbody>\n\n                </table>\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  Tracks\n                </h4>\n              </div>\n\n              <div class=\"column txt-r\">\n                <!-- <p class=\"meta\">{{history.construct.n_tracks}} tracks</p> -->\n              </div>\n\n              <div class=\"column\">\n\n                <div class=\"construct\">\n                  <div class=\"strand\">\n\n                  </div>\n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"one column row\">\n\n      <div class=\"column\">\n        <div class=\"ui fluid placeholder\">\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n          <div class=\"paragraph\">\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n            <div class=\"line\"></div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n","<!-- Values viewer modal-->\n<div class=\"ui padded grid\">\n\n  <div class=\"row\" [hidden]=\"!title\">\n    <div class=\"column\">\n      <h2 class=\"ui header no-bold\">{{title}}</h2>\n    </div>\n  </div>\n\n  <div class=\"two column row\">\n\n    <div class=\"column\">\n      <strong> Total score:</strong> {{values?.length}}\n    </div>\n\n    <div class=\"column pr-5 right aligned\">\n      <button type=\"button\" name=\"download\" class=\"ui primary right labeled icon button\" (click)=\"exportToExcel()\">\n        Download as Excel\n        <i class=\"download icon\"></i>\n      </button>\n    </div>\n\n  </div>\n\n  <div class=\"row\" style=\"height: 600px; overflow-x: auto\">\n\n    <div class=\"column\">\n      <table class=\"ui selectable small compact table\">\n\n        <thead>\n          <tr>\n            <th *ngFor=\"let h of headers\">\n              {{h}}\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n\n          <tr *ngFor=\"let value of values\">\n            <td *ngFor=\"let key of objectKeys(value)\">\n              {{value[key]}}\n            </td>\n          </tr>\n\n        </tbody>\n\n      </table>\n    </div>\n  </div>\n\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { FileService } from '@services/file.service';\n\n@Component({\n  selector: 'sqy-display-values',\n  templateUrl: './display-values.component.html',\n  styleUrls: ['./display-values.component.scss']\n})\nexport class DisplayValuesComponent {\n\n  @Input() headers: string[] = [];\n  @Input() values: number[] = [];\n  @Input() min: number;\n  @Input() max: number;\n  @Input() title: string;\n\n  objectKeys = Object.keys;\n\n  constructor(\n    private fileSrvc: FileService,\n    private notify: NzMessageService\n  ) { }\n\n  exportToExcel() {\n    if (this.values) {\n      this.fileSrvc.exportAsExcelFile([{ name: 'Scores', data: this.values }]);\n      this.notify.success('Exported successfully!');\n    }\n  }\n\n}\n","<div class=\"ui padded grid\">\n\n  <div class=\"row\">\n    <div class=\"sixteen wide column\">\n      <h2 class=\"ui header no-bold\">Export as</h2>\n    </div>\n  </div>\n\n  <div class=\"row\">\n\n    <div class=\"four wide column\">\n      <label class=\"sqy label\">\n        <i class=\"file outline icon\"></i> GenBank\n      </label>\n      <input type=\"radio\" name=\"to\" value=\"gb\" [(ngModel)]=\"to\">\n    </div>\n\n    <div class=\"four wide column\">\n      <label class=\"sqy label\">\n        <i class=\"file excel outline icon\"></i> Excel\n      </label>\n      <input type=\"radio\" name=\"to\" value=\"excel\" [(ngModel)]=\"to\">\n    </div>\n\n  </div>\n\n  <div class=\"row\">\n    <div class=\"column\">\n      <h2 class=\"ui header no-bold\">Select items to export</h2>\n    </div>\n  </div>\n\n  <div class=\"one column row\">\n\n    <div class=\"column\">\n      <span class=\"meta\">If there is no item selected only scores will be exported.</span>\n    </div>\n\n    <div class=\"column pt-3\">\n      <span class=\"meta\">{{list.length}} / {{_items.length}} selected</span>\n    </div>\n\n    <div class=\"column\" *ngFor=\"let f of _items\">\n      <div class=\"ui checkbox\">\n        <input type=\"checkbox\" name=\"features\" checked (change)=\"featChange(f.alias, $event.target.checked)\">\n        <label>\n          <i class=\"circle icon\" [style.color]=\"f.color\"></i> {{f.name}}\n          <sqy-info-popup [content]=\"f.description\"></sqy-info-popup>\n        </label>\n      </div>\n\n    </div>\n\n  </div>\n\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sqy-export-modal',\n  templateUrl: './export-modal.component.html',\n  styleUrls: ['./export-modal.component.scss']\n})\nexport class ExportModalComponent {\n\n  list: any[] = [];\n  _items: any[];\n  to = 'gb';\n\n  @Input() set items(items: any[]) {\n    if (items.length > 0) {\n      this._items = items;\n      this.list = this._items.map(f => f.alias);\n    }\n  }\n\n  featChange(alias: string, isChecked: boolean) {\n    isChecked ? this.list.push(alias) : this.list = this.list.filter(f => f !== alias);\n  }\n\n}\n","<form class=\"ui tiny form\">\n\n  <div class=\"field\">\n    <table class=\"ui table\">\n\n      <thead>\n        <tr>\n          <th>Minimum value</th>\n          <th>Maximum value</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr>\n          <td>{{option.min}}</td>\n          <td>{{option.max}}</td>\n        </tr>\n      </tbody>\n\n    </table>\n  </div>\n\n  <div class=\"two fields\">\n\n    <div class=\"field\">\n      <nz-select name=\"operator\" nzSize=\"small\" nzPlaceHolder=\"Operator\" required [(ngModel)]=\"op\">\n        <nz-option *ngFor=\"let o of operators\" [nzLabel]=\"o.desc\" [nzValue]=\"o.op\"></nz-option>\n      </nz-select>\n    </div>\n\n    <div class=\"field\">\n      <input type=\"number\" name=\"value\" placeholder=\"Enter a value\" required [(ngModel)]=\"value\"/>\n    </div>\n\n  </div>\n\n</form>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sqy-set-cutoff',\n  templateUrl: './set-cutoff.component.html',\n  styleUrls: ['./set-cutoff.component.scss']\n})\nexport class SetCutoffComponent {\n\n  @Input() option = null;\n\n  operators = [\n    { desc: 'Greater or equal than', op: '<=' },\n    { desc: 'Greater than', op: '<' },\n    { desc: 'Equal to', op: '=' },\n    { desc: 'Lower or equal than', op: '>=' },\n    { desc: 'Lower than', op: '>' }\n  ];\n  op = this.operators[0].op;\n  value: number;\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'sqy-set-highlight',\n  templateUrl: './set-highlight.component.html',\n  styleUrls: ['./set-highlight.component.scss']\n})\nexport class SetHighlightComponent implements OnInit {\n\n  @Input() max: number;\n  @Output() onSet = new EventEmitter<string>();\n  highlightForm: FormGroup;\n\n  constructor(private builder: FormBuilder) { }\n\n  get from() {\n    return this.highlightForm.get('from');\n  }\n\n  get to() {\n    return this.highlightForm.get('to');\n  }\n\n  ngOnInit(): void {\n    this.highlightForm = this.builder.group({\n      from: [0, Validators.compose([\n        Validators.min(0),\n        Validators.required,\n        Validators.max(this.max - 1)\n      ])],\n      to: [this.max, Validators.compose([\n        Validators.required,\n        Validators.min(1),\n        Validators.max(this.max)\n      ])]\n    });\n  }\n\n  set() {\n    if (this.from.value < this.to.value) {\n      this.onSet.emit(`${this.from.value}:${this.to.value}`);\n    }\n  }\n\n}\n","<form class=\"ui tiny form\" [formGroup]=\"highlightForm\" (ngSubmit)=\"set()\">\n\n  <div class=\"field\">\n    <span class=\"meta\">Enter positions to define highlight area.</span>\n  </div>\n\n  <div class=\"fields\">\n\n    <div class=\"field\" [ngClass]=\"{'error': from.invalid && (from.dirty || from.touched)}\">\n      <label>From</label>\n      <input type=\"number\" placeholder=\"From\" required name=\"highl-from\" formControlName=\"from\">\n    </div>\n\n    <div class=\"field\" [ngClass]=\"{'error': to.invalid && (to.dirty || to.touched)}\">\n      <label>To</label>\n      <input type=\"number\" placeholder=\"Max: {{max}}\" required name=\"highl-to\" formControlName=\"to\">\n    </div>\n\n  </div>\n\n  <div class=\"field\">\n    <button type=\"submit\" class=\"ui fluid primary button\" [disabled]=\"highlightForm.invalid\">Set</button>\n  </div>\n\n</form>\n","<div class=\"ui vertically divided grid\" style=\"min-height: 900px\">\n\n  <div class=\"equal width center aligned middle aligned row\" style=\"padding: 0em\">\n\n    <div class=\"column\">\n      <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"hgMenu\" nzPlacement=\"bottomCenter\">\n        Highlight\n        <i class=\"dropdown icon\"></i>\n      </a>\n    </div>\n\n    <div class=\"column\">\n      <a (click)=\"exportModal()\">\n        <i class=\"download icon\"></i>\n        Export\n      </a>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"ui icon fluid input\" [ngClass]=\"{'loading disabled': isSearching}\">\n        <i class=\"search icon\"></i>\n        <input type=\"text\" placeholder=\"Search for motif\" (keyup.enter)=\"searchMotif($event.target.value)\">\n      </div>\n    </div>\n\n    <div class=\"column\">\n      <nz-select class=\"w-1-1\" nzPlaceHolder=\"Restriction enzyme\" (ngModelChange)=\"searchMotif($event)\" nzDisabled [(ngModel)]=\"enzime\" ngDefaultControl nzAllowClear>\n        <nz-option *ngFor=\"let e of enzimes\" [nzLabel]=\"e\" [nzValue]=\"e\"></nz-option>\n      </nz-select>\n    </div>\n\n    <div class=\"column\">\n      <p>\n        <i class=\"zoom icon\"></i> Use <strong>Ctrl</strong> + <strong>Scroll</strong> to zoom.\n      </p>\n    </div>\n\n  </div>\n\n  <div class=\"one column row\">\n\n    <div class=\"column mt-0\">\n\n      <protvista-manager attributes=\"length displaystart displayend highlight\">\n        <div class=\"ui very padded grid graphs\">\n\n          <div class=\"one column row\">\n\n            <div class=\"column mb-3\">\n              <protvista-navigation #navigator class=\"protvista\"></protvista-navigation>\n              <protvista-sequence class=\"protvista\" highlight-event=\"onmouseover\" use-ctrl-to-zoom #dnaSeq></protvista-sequence>\n              <protvista-sequence class=\"protvista\" highlight-event=\"onmouseover\" use-ctrl-to-zoom #proteinSeq></protvista-sequence>\n              <protvista-interpro-track class=\"protvista\" shape=\"roundRectangle\" use-ctrl-to-zoom highlight-event=\"onmouseover\" #tracksView></protvista-interpro-track>\n            </div>\n\n            <div class=\"column\">\n              <p class=\"meta\">Click on each feature to show or hide</p>\n            </div>\n\n            <div class=\"column\">\n\n              <div class=\"ui top attached menu\">\n\n                <div class=\"item\">\n                  <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"graphsMenu\">\n                    <i class=\"cogs icon\"></i>\n                    Graphs\n                    <i class=\"dropdown icon\"></i>\n                  </a>\n                </div>\n\n                <a class=\"item\" *ngFor=\"let o of options\" [ngClass]=\"{'non-active': !o.display}\" (click)=\"o.display = !o.display\">\n                  <i class=\"circle icon\" [style.color]=\"o.color\"></i>\n                  <p class=\"feat-label\">{{o.name}}</p>\n                </a>\n\n              </div>\n\n            </div>\n\n            <div class=\"column pt-4\" [hidden]=\"!op.display\" *ngFor=\"let op of options; let i = index\">\n\n              <div class=\"ui padded grid\">\n\n                <div class=\"row\">\n                  <div class=\"column\">\n                    <h3 class=\"ui horizontal divider header\">{{op.name}}</h3>\n                  </div>\n                </div>\n\n                <div class=\"three column row mb-3\">\n\n                  <div class=\"column s-action\">\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"acMenu\">\n                      Chart\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"dataMenu\">\n                      Data\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"sExMenu\">\n                      Export\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n                    <a nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"cutMenu\">\n                      Cutoff\n                      <i class=\"dropdown icon\"></i>\n                    </a>\n\n                    <!-- Action -->\n                    <nz-dropdown-menu #acMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"changeColors(op.alias)\">\n                          <i class=\"sync icon\"></i>\n                          Change color\n                        </li>\n                        <li nz-menu-item (click)=\"op.display = false\">\n                          <i class=\"eye slash icon\"></i>\n                          Hide\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <!-- Data -->\n                    <nz-dropdown-menu #dataMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"displayScore(op.alias)\">\n                          <i class=\"eye icon\"></i>\n                          Display all scores\n                        </li>\n                        <li nz-menu-item [nzDisabled]=\"!op.cutoffs\" (click)=\"displayCutoffs(op.alias)\">\n                          <i class=\"eye icon\"></i>\n                          Display cutoffs positions\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <!-- Single Graph Export -->\n                    <nz-dropdown-menu #sExMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"exportToExcel(op.alias)\">\n                          <i class=\"file excel outline icon\"></i>\n                          Excel\n                        </li>\n                        <li nz-menu-item (click)=\"exportToGb({key: op.alias})\">\n                          <i class=\"dna icon\"></i>\n                          GenBank\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <!-- Cutoff -->\n                    <nz-dropdown-menu #cutMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"cutoffModal(op.alias)\">\n                          Set cutoff\n                        </li>\n                        <!-- <li nz-menu-item>\n                          Set cutoff for minimum\n                        </li>\n                        <li nz-menu-item>\n                          Set cutoff for maximum\n                        </li> -->\n                        <li nz-menu-item [nzDisabled]=\"!op.cutoffs\" (click)=\"displayCutoffs(op.alias)\">\n                          <i class=\"eye icon\"></i>\n                          Display cutoffs positions\n                        </li>\n                        <li nz-submenu nzTitle=\"Download current threshold\" [nzDisabled]=\"!op.cutoffs\">\n                          <ul>\n                            <li nz-menu-item (click)=\"exportCutoffToGb(op.alias)\">\n                              <i class=\"dna icon\"></i> Download as GenBank\n                            </li>\n                            <li nz-menu-item (click)=\"exportCutoffToExcel(op.alias)\">\n                              <i class=\"file excel outline icon\"></i> Download as Excel\n                            </li>\n                          </ul>\n                        </li>\n                        <li nz-menu-item [nzDisabled]=\"!op.cutoffs\" (click)=\"clearCutoffs(op.alias)\">\n                          <i class=\"eraser icon\"></i> Clear cutoffs positions\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                  </div>\n\n                  <div class=\"column txt-c cutoff\" id=\"cutoffRes{{op.alias}}\" style=\"visibility: hidden\">\n                    <p></p>\n                  </div>\n\n                  <div class=\"column right aligned\">\n                    <div class=\"ui dropdown\" nz-dropdown nzTrigger=\"click\" [nzDropdownMenu]=\"vlMenu\">\n                      <div class=\"text\">\n                        <strong>Values: </strong>{{op.type === 'raw' ? 'Raw' : 'Normalized'}}\n                      </div>\n                      <i class=\"dropdown icon\"></i>\n                    </div>\n\n                    <!-- Values -->\n                    <nz-dropdown-menu #vlMenu=\"nzDropdownMenu\">\n                      <ul nz-menu nzSelectable>\n                        <li nz-menu-item (click)=\"switchScore(op.alias, 'raw')\">\n                          Raw <i [hidden]=\"op.type !== 'raw'\" class=\"check small icon\"></i>\n                        </li>\n                        <li nz-menu-item (click)=\"switchScore(op.alias, 'norm')\">\n                          Normalized <i [hidden]=\"op.type !== 'norm'\" class=\"check small icon\"></i>\n                        </li>\n                      </ul>\n                    </nz-dropdown-menu>\n\n                    <sqy-info-popup [content]=\"op.description\"></sqy-info-popup>\n\n                  </div>\n\n                </div>\n\n              </div>\n\n              <sqrutiny-matrix class=\"protvista score-graph\" id=\"{{op.alias}}\" height=\"60\" use-ctrl-to-zoom></sqrutiny-matrix>\n\n              <div class=\"ui two column grid\">\n\n                <div class=\"column\">\n                  <span class=\"meta\" style=\"font-size: .9em !important;\">\n                    Min: <strong>{{op.min}}</strong>\n                  </span>\n                </div>\n\n                <div class=\"column right aligned\">\n                  <span class=\"meta\" style=\"font-size: .9em !important;\">\n                    Max: <strong>{{op.max}}</strong>\n                  </span>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </protvista-manager>\n\n    </div>\n\n  </div>\n\n</div>\n\n<!-- Menus -->\n\n<!-- Visibility -->\n<nz-dropdown-menu #graphsMenu=\"nzDropdownMenu\">\n  <ul nz-menu nzSelectable>\n    <li nz-menu-item (click)=\"displayAll()\">\n      <i class=\"eye icon\"></i>\n      Display all\n    </li>\n    <li nz-menu-item (click)=\"hideAll()\">\n      <i class=\"eye icon\"></i>\n      Hide all\n    </li>\n    <li nz-menu-item (click)=\"changeColors()\">\n      <i class=\"sync icon\"></i>\n      Change colors\n    </li>\n  </ul>\n</nz-dropdown-menu>\n\n<!-- Highlight -->\n<nz-dropdown-menu #hgMenu=\"nzDropdownMenu\">\n  <ul nz-menu nzSelectable>\n    <li nz-menu-item nz-popover nzType=\"primary\" nzPopoverTrigger=\"click\" nzPopoverTitle=\"Set highlight by positions\" [nzPopoverContent]=\"hgTmplt\">\n      <i class=\"crosshairs icon\"></i>\n      Set highlight\n    </li>\n    <li nz-menu-item (click)=\"clearHighlight()\">\n      <i class=\"eraser icon\"></i>\n      Clear highlight\n    </li>\n  </ul>\n</nz-dropdown-menu>\n\n<!-- Popover templates -->\n<ng-template #hgTmplt>\n  <sqy-set-highlight [max]=\"_data.construct.dna_seq.length\" (onSet)=\"setHighlight($event)\"></sqy-set-highlight>\n</ng-template>\n","import { Component, Input, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzModalService } from 'ng-zorro-antd/modal';\n\nimport { SqrutinyService } from '@services/sqrutiny.service';\nimport { Track } from 'app/optimizer/shared/track';\nimport { DisplayValuesComponent } from '../display-values/display-values.component';\nimport { HistoryService } from '../history.service';\nimport { FileService } from '@services/file.service';\nimport { LoaderService } from '@services/loader.service';\nimport { ExportModalComponent } from '../export-modal/export-modal.component';\nimport { FeatureService } from 'app/optimizer/shared/feature.service';\nimport { Feature } from 'app/optimizer/shared/feature';\nimport { SetCutoffComponent } from '../set-cutoff/set-cutoff.component';\n\nclass GraphsOption {\n  name?: string;\n  alias: string;\n  description?: string;\n  display: boolean;\n  data: any;\n  max: number;\n  min: number;\n  type: string;\n  cutoffs?: number[];\n  color: string;\n}\n\nclass Filter {\n  alias: string;\n  value: number;\n  op: string;\n  type: string;\n}\n\n@Component({\n  selector: 'sqy-results-viewer',\n  templateUrl: './results-viewer.component.html',\n  styleUrls: ['./results-viewer.component.scss']\n})\nexport class ResultsViewerComponent implements AfterViewInit {\n\n  @Input() set data(data: any) {\n    this._data = data;\n    this.options = [];\n    if (!this._data.results || !this._data.construct || !this._data.results.length) {\n      return;\n    }\n    this.loader.startLoading();\n    this._data.results.forEach((r: any) => {\n      this.options.push({\n        alias: r.alias,\n        display: true,\n        data: r.scores.map((d: any) => ({ pos: d.start, score: d.raw_score })),\n        max: Math.max.apply(Math, r.scores.map((d: any) => d.raw_score)),\n        min: Math.min.apply(Math, r.scores.map((d: any) => d.raw_score)),\n        type: 'raw',\n        color: this.getRandomColor()\n      });\n    });\n    this.getFeatures();\n  }\n\n  _data: any = null; // Original data\n  isSearching = false;\n  options: GraphsOption[] = [];\n  filters: Filter[] = [];\n  enzime: string;\n  enzimes = [\n    'GAATTC',\n    'CTTAAG',\n    'CCWGG',\n    'GGWCC',\n    'GGATCC',\n    'CCTAGG',\n    'AAGCTT',\n    'TTCGAA'\n  ];\n  operators = [\n    { desc: 'Greater or equal than', op: '<=' },\n    { desc: 'Greater than', op: '<' },\n    { desc: 'Equal to', op: '=' },\n    { desc: 'Lower or equal than', op: '>=' },\n    { desc: 'Lower than', op: '>' }\n  ];\n  operatorsFn = {\n    '<': (a: number, b: number) => a < b,\n    '<=': (a: number, b: number) => a <= b,\n    '=': (a: number, b: number) => a === b,\n    '>': (a: number, b: number) => a > b,\n    '>=': (a: number, b: number) => a >= b,\n  };\n\n  @ViewChild('dnaSeq') dnaSeq: ElementRef<HTMLElement>;\n  @ViewChild('proteinSeq') proteinSeq: ElementRef<HTMLElement>;\n  @ViewChild('tracksView') tracksElem: ElementRef<HTMLElement>;\n  @ViewChild('navigator') nav: ElementRef<HTMLElement>;\n\n  constructor(\n    private sqSrvc: SqrutinyService,\n    private notify: NzMessageService,\n    private modal: NzModalService,\n    private fileSrvc: FileService,\n    private historySrvc: HistoryService,\n    private route: ActivatedRoute,\n    private loader: LoaderService,\n    private featureSrvc: FeatureService\n  ) { }\n\n  ngAfterViewInit() {\n    // Init graphs\n    if (this._data && this.options) {\n      /* tslint:disable:no-string-literal */\n      this.nav.nativeElement['length'] = this._data.construct.dna_seq.length;\n      document.querySelectorAll('.protvista').forEach((x: any) => x.setAttribute('length', this._data.construct.dna_seq.length));\n      this.dnaSeq.nativeElement['data'] = this._data.construct.dna_seq;\n      this.proteinSeq.nativeElement['data'] = this.toProteinSeqVw(this._data.construct.protein_seq);\n      this.tracksElem.nativeElement['data'] = this.getTrackView(this._data.construct.tracks);\n      document.querySelectorAll('.score-graph').forEach((x: any, i: number) => {\n        x.data = this.options[i].data;\n        x.setAttribute('color', this.options[i].color);\n      });\n      /* tslint:enable:no-string-literal */\n    }\n  }\n\n  private getTrackView(tracks: Track[]) {\n    return tracks.map((track: Track) => ({\n      accession: 'XXXXX',\n      start: track.start,\n      end: track.end,\n      color: track.color\n    }));\n  }\n\n  private toProteinSeqVw(val: string) {\n    return ` ${val.split('').join('  ')} `;\n  }\n\n  private getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  displayAll() {\n    this.options.map(x => x.display = true);\n  }\n\n  hideAll() {\n    this.options.map(x => x.display = false);\n  }\n\n  setHighlight(pos: string) {\n    if (pos) {\n      document.querySelectorAll('.protvista').forEach((x: any) => x.fixedHighlight = pos);\n    }\n  }\n\n  clearHighlight() {\n    document.querySelectorAll('.protvista').forEach((x: any) => x.fixedHighlight = undefined);\n  }\n\n  clearCutoffs(alias: string) {\n    /* tslint:disable:no-string-literal */\n    document.getElementById(alias)['cutoffs'] = undefined;\n    this.getByAlias(this.options, alias).cutoffs = null;\n    this.filters = this.filters.filter(f => f.alias !== alias);\n    document.getElementById('cutoffRes' + alias).getElementsByTagName('p')[0].innerHTML = '';\n    document.getElementById('cutoffRes' + alias).style.visibility = 'hidden';\n    /* tslint:enable:no-string-literal */\n  }\n\n  clearAllCutoffs() {\n    document.querySelectorAll('.score-graph').forEach((x: any) => x.cutoffs = undefined);\n    this.options.map(op => op.cutoffs = null);\n    this.filters = [];\n    document.querySelectorAll('.cutoff').forEach((c: HTMLElement) => c.style.visibility = 'hidden');\n  }\n\n  cutoffModal(alias: string) {\n    const op = this.getByAlias(this.options, alias);\n    this.modal.create({\n      nzTitle: 'Set cutoff for ' + op.name,\n      nzContent: SetCutoffComponent,\n      nzWidth: 450,\n      nzWrapClassName: 'center-modal',\n      nzComponentParams: {\n        option: op\n      },\n      nzOnOk: (cmp: SetCutoffComponent) => {\n        if (cmp.op !== null && cmp.value !== null && !Number.isNaN(cmp.value)) {\n          this.setThreshold({ alias, value: cmp.value, op: cmp.op, type: op.type });\n        }\n      }\n    });\n  }\n\n  private setThreshold(filter: Filter) {\n    if (filter.alias && filter.op && filter.value !== null) {\n      let values = [];\n      values = this.getByAlias(this.options, filter.alias).data.filter(d => {\n        if (this.operatorsFn[filter.op](filter.value, d.score)) {\n          return {\n            pos: d.pos,\n            score: d.score\n          };\n        }\n      });\n      if (values.length) {\n        this.getByAlias(this.options, filter.alias).cutoffs = values;\n        this.filters.push(filter);\n        /* tslint:disable:no-string-literal */\n        document.getElementById(filter.alias)['cutoffs'] = values.map((v: any) => v.pos);\n        /* tslint:enable:no-string-literal */\n        const element = document.getElementById('cutoffRes' + filter.alias).getElementsByTagName('p')[0];\n        element.innerHTML = `<i class=\"filter icon\"></i> ${this.operators.find(o => o.op === filter.op).desc} ${filter.value}`;\n        element.style.visibility = 'visible';\n      } else {\n        this.clearCutoffs(filter.alias);\n        this.notify.info(this.getByAlias(this.options, filter.alias).name + ': No result was found');\n      }\n    }\n  }\n\n  displayScore(alias: string) {\n    const data = this.getByAlias(this._data.results, alias);\n    this.valuesModal(data.scores, ['Start', 'End', 'Raw values', 'Normalized values'], this.getByAlias(this.options, alias).name + ' data');\n  }\n\n  displayCutoffs(alias: string) {\n    const op = this.getByAlias(this.options, alias);\n    this.valuesModal(op.cutoffs, ['Position', 'Score'], op.name + ' cutoff positions');\n  }\n\n  private valuesModal(values: any[], headers: string[], title?: string) {\n    this.modal.create({\n      nzContent: DisplayValuesComponent,\n      nzWrapClassName: 'center-modal',\n      nzComponentParams: {\n        headers,\n        values,\n        title\n      },\n      nzFooter: null\n    });\n  }\n\n  changeColors(alias?: string) {\n    if (alias) {\n      this.getByAlias(this.options, alias).color = this.getRandomColor();\n      document.getElementById(alias).setAttribute('color', this.getByAlias(this.options, alias).color);\n    } else {\n      this.options.forEach(o => o.color = this.getRandomColor());\n      document.querySelectorAll('.score-graph').forEach((x: any, i: number) => x.setAttribute('color', this.options[i].color));\n    }\n  }\n\n  switchScore(alias: string, type: string) {\n    const op = this.getByAlias(this._data.results, alias);\n    if (op) {\n      op.scores = op.scores.map(s => type === 'raw' ? s.raw_score : s.norm_score);\n      /* tslint:disable:no-string-literal */\n      document.getElementById(alias)['data'] = op.scores.map((s: any) => ({\n        pos: s.start,\n        score: type === 'raw' ? s.raw_score : s.norm_score,\n        min: Math.min.apply(Math, op.scores),\n        max: Math.max.apply(Math, op.scores)\n      }));\n      /* tslint:enable:no-string-literal */\n      this.getByAlias(this.options, alias).type = type;\n    }\n\n  }\n\n  searchMotif(motif: any) {\n    if (motif) {\n      this.isSearching = true;\n      this.sqSrvc.motifInSeq(this._data.construct.dna_seq, motif)\n        .pipe(finalize(() => this.isSearching = false))\n        .subscribe(\n          (data: any) => {\n            if (data.count > 0) {\n              let positions = '';\n              data.data.map((pos: number[]) => positions += `,${pos[0]}:${pos[1]}`);\n              if (positions.charAt(0) === ',') {\n                positions = positions.substring(1);\n              }\n              document.querySelectorAll('.protvista').forEach((x: any) => x.fixedHighlight = positions);\n            } else {\n              this.notify.error('No match was found');\n            }\n          },\n          err => this.notify.error(err)\n        );\n    }\n  }\n\n  private getFeatures() {\n    this.loader.startLoading();\n    this.featureSrvc\n      .getAll()\n      .subscribe(data => {\n        const features = data.map((e: any) => new Feature().deserialize(e));\n        this.options.map(o => {\n          const ft = features.find(f => f.alias === o.alias);\n          if (ft) {\n            o.name = ft.name;\n            o.description = ft.description;\n          }\n        });\n        this.loader.stopLoading();\n      }\n      );\n  }\n\n  // Export\n\n  exportCutoffToGb(alias: string) {\n    const filter = this.getByAlias(this.filters, alias);\n    if (filter) {\n      this.exportToGb([{ key: alias, filter }]);\n    }\n  }\n\n  exportModal() {\n    this.modal.create({\n      nzTitle: 'Export wizard',\n      nzContent: ExportModalComponent,\n      nzComponentParams: {\n        items: this.options.map(o => ({ name: o.name, color: o.color, alias: o.alias }))\n      },\n      nzWidth: 700,\n      nzOkText: 'Export',\n      nzOnOk: (cmp: ExportModalComponent) => cmp.to === 'gb' ? this.exportToGb(cmp.list.map(l => ({ key: l })) || []) : this.exportToExcel(cmp.list || [])\n    });\n  }\n\n  exportToGb(options: any) {\n    this.loader.startLoading();\n    if (options && !Array.isArray(options)) {\n      options = [options];\n    }\n    this.historySrvc.export(this.route.snapshot.data.history.id, { options: options || null })\n      .pipe(finalize(() => this.loader.stopLoading()))\n      .subscribe((d: any) => {\n        this.notify.success('Your download is about to start.');\n        this.fileSrvc.saveFileAs(d.data, d.mimetype, d.filename);\n      },\n        err => this.notify.error(err)\n      );\n  }\n\n  exportCutoffToExcel(alias?: string[]) {\n    let data = [];\n    if (alias) {\n      if (!Array.isArray(alias)) {\n        alias = [alias];\n      }\n      alias.map(a => {\n        const op = this.getByAlias(this.options, a);\n        if (op.cutoffs) {\n          data = [{ name: op.name, data: op.cutoffs }];\n        }\n      });\n    } else {\n      data = this.options.filter((o: GraphsOption) => !o.cutoffs);\n    }\n    if (data.length > 0) {\n      this.fileSrvc.exportAsExcelFile(data, data.length === 1 ? alias[0] : 'scores');\n      this.notify.success('Exported! Your download is about to start.');\n    } else {\n      this.notify.error('Unable to export.');\n    }\n  }\n\n  exportToExcel(alias?: string[]) {\n    let data = [];\n    if (alias) {\n      if (!Array.isArray(alias)) {\n        alias = [alias];\n      }\n      alias.map(a => {\n        const op = this.getByAlias(this._data.results, a);\n        data.push({ name: op.alias, data: op.scores });\n      });\n    } else {\n      data = this._data.results.map((v: any) => ({ name: v.alias, data: v.scores }));\n    }\n    if (data.length > 0) {\n      this.fileSrvc.exportAsExcelFile(data, data.length === 1 ? alias[0] : 'scores');\n      this.notify.success('Exported! Your download is about to start.');\n    } else {\n      this.notify.error('Unable to export.');\n    }\n  }\n\n  private getByAlias(data: any[], alias: string): any {\n    return data.find(o => o.alias === alias);\n  }\n}\n","<!-- Loading placeholder -->\n<sqy-history-loading *ngIf=\"isLoading\"></sqy-history-loading>\n\n<div class=\"ui main fluid container p-4 mt-6\" *ngIf=\"!isLoading\">\n\n  <div class=\"ui grid\">\n\n    <div class=\"row\" id=\"history\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded one column grid\">\n\n            <div class=\"column\">\n              <h1 class=\"ui header\">\n                {{history.name}}\n              </h1>\n            </div>\n\n            <div class=\"two column row\">\n\n              <div class=\"column\">\n                <span class=\"date\">\n                  <time [dateTime]=\"history.created_at\">{{history.created_at | date: 'd MMMM, YYYY hh:mm'}}</time>\n                </span>\n                <div class=\"ant-badge ant-badge-status ant-badge-not-a-wrapper\">\n                  <span class=\"ant-badge-status-dot\" [ngClass]=\"{'ant-badge-status-error': history.hasFailed(), 'ant-badge-status-processing': history.isActive(), 'ant-badge-status-success': history.isDone()}\"></span>\n                  <span class=\"ant-badge-status-text\">{{history.job?.status | titlecase}}</span>\n                </div>\n              </div>\n\n              <div class=\"column txt-r\">\n\n                <a class=\"m-4\" *ngIf=\"history.isActive()\" (click)=\"getJob()\">\n                  <i class=\"sync icon\"></i>\n                  Refresh content\n                </a>\n\n                <a class=\"m-4 delete\" (click)=\"deleteHistory()\">\n                  <i class=\"trash icon\"></i>\n                  Delete history\n                </a>\n\n              </div>\n\n            </div>\n\n            <div class=\"eleven wide column\">\n              <div class=\"ui very relaxed horizontal selection large list\">\n                <div class=\"item\">\n                  <i class=\"barcode large icon\"></i>\n                  <div class=\"content\">\n                    <a class=\"header\" onclick=\"window.location.hash = 'construct'\">Construct</a>\n                    <p>Check Construct details</p>\n                  </div>\n                </div>\n                <div class=\"item\">\n                  <i class=\"chart bar outline large icon\"></i>\n                  <div class=\"content\">\n                    <a class=\"header\" onclick=\"window.location.hash = 'results'\">Plot area</a>\n                    <p>Go to results visualizator area</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"five wide column right aligned\">\n              <div class=\"ui action fluid input\">\n                <input type=\"text\" [value]=\"history.id\" name=\"history-id\">\n                <button type=\"button\" class=\"ui right labeled icon primary button\" name=\"copy\" [sqy-clipboard]=\"history.id\">\n                  Copy <i class=\"copy icon\"></i>\n                </button>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"row\" id=\"construct\">\n\n      <div class=\"ui container\">\n\n        <div class=\"sixteen wide column\">\n\n          <div class=\"ui padded form construct-summary grid\">\n\n            <div class=\"one column row\">\n              <div class=\"column txt-c\">\n                <h2>Construct summary</h2>\n              </div>\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n\n                <div class=\"field\" [hidden]=\"!history.construct.description\">\n                  <p>{{history.construct.description}}</p>\n                </div>\n\n                <div class=\"four inline fields\">\n\n                  <div class=\"field\">\n                    <label>Label:</label>\n                    {{history.construct.name}}\n                  </div>\n\n                  <div class=\"field\">\n                    <label>Number of tracks:</label>\n                    {{history.construct.n_tracks}}\n                  </div>\n\n                  <div class=\"field\">\n                    <label>Circular:</label>\n                    <i class=\"circle icon\" [ngClass]=\"{'check green': history.construct.circular, 'times red': !history.construct.circular}\"></i>\n                  </div>\n\n                  <div class=\"field\">\n                    <a routerLink=\"/optimize/sketcher\" [queryParams]=\"{construct: history.construct.id}\">See it on Sketcher <i class=\"external link icon\"></i> </a>\n                  </div>\n\n                  <div class=\"field\">\n                    <a [routerLink]=\"['/editor', history.id]\">See it on Vector Editor <i class=\"external link icon\"></i> </a>\n                  </div>\n\n                </div>\n\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  <i class=\"bug icon\"></i>\n                  Organism\n                </h4>\n              </div>\n\n              <div class=\"column\">\n                <p>Open on <a href=\"{{history.construct.specie.tax_link}}\" target=\"_blank\">NCBI Taxonomy browser</a> organism info</p>\n\n                <div class=\"two inline fields\">\n                  <div class=\"inline field\">\n                    <label>Name:</label>\n                    <a href=\"{{history.construct.specie.tax_link}}\" target=\"_blank\">\n                      {{history.construct.specie.name}}\n                    </a>\n                  </div>\n                  <div class=\"inline field\">\n                    <label>Taxonomy ID:</label>\n                    {{history.construct.specie.tax_id}}\n                  </div>\n                </div>\n\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  <i class=\"dna icon\"></i>\n                  Sequence\n                </h4>\n              </div>\n\n              <div class=\"column\">\n                <p> <i class=\"info icon\"></i> Click on sequence to display full content</p>\n\n                <table class=\"ui blue padded sequence definition table\">\n\n                  <tbody>\n                    <tr>\n                      <th>DNA</th>\n                      <td class=\"link\" (click)=\"textModal(history.construct.dna_seq)\">\n                        {{history.construct.dna_seq}}\n                      </td>\n                      <td>\n                        <strong>Total:</strong>\n                        {{history.construct.dna_seq.length}} bps\n                      </td>\n                    </tr>\n                    <tr>\n                      <th>Protein</th>\n                      <td class=\"link\" (click)=\"textModal(history.construct.protein_seq)\">\n                        {{history.construct.protein_seq}}\n                      </td>\n                      <td>\n                        <strong>Total:</strong>\n                        {{history.construct.protein_seq.length}}\n                      </td>\n                    </tr>\n                  </tbody>\n\n                </table>\n              </div>\n\n            </div>\n\n            <div class=\"one column row\">\n\n              <div class=\"column\">\n                <h4 class=\"ui horizontal divider header\">\n                  Tracks\n                </h4>\n              </div>\n\n              <div class=\"column\" style=\"min-height: 18px\">\n                <div class=\"ui grid\">\n                  <div class=\"four wide column\">\n                    <p> <i class=\"info icon\"></i> Hover a track to display information</p>\n                  </div>\n                  <div class=\"three wide column center aligned\" [hidden]=\"!trackHovered\">\n                    <strong>Start:</strong> {{trackHovered?.start}}\n                  </div>\n                  <div class=\"three wide column center aligned\" [hidden]=\"!trackHovered\">\n                    <strong>End:</strong> {{trackHovered?.end}}\n                  </div>\n                  <div class=\"three wide column center aligned\" [hidden]=\"!trackHovered\">\n                    <strong>Length:</strong> {{trackHovered?.sequence.length}} bps\n                  </div>\n                  <div class=\"right floated two wide column right aligned\">\n                    <p class=\"meta\">{{history.construct.n_tracks}} tracks</p>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"column\">\n\n                <div class=\"construct\">\n                  <div class=\"strand\">\n\n                    <div class=\"track\" (mouseover)=\"trackHovered = t\" (mouseout)=\"trackHovered = null\" *ngFor=\"let t of history.construct.tracks; let i = index\">\n\n                      <div class=\"header\">\n                        <h4>{{t.label}}</h4>\n                      </div>\n                      <div class=\"image\" [ngStyle]=\"{background: 'url('+t.glyph_thumbnail+')', 'border-bottom': '1.5px solid '+t.color}\" data-inverted=\"\" [attr.data-tooltip]=\"t.name\" data-position=\"bottom center\"></div>\n                      <div class=\"index\">\n                        {{i + 1}}\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"one column row\" id=\"results\">\n\n      <div class=\"column\">\n        <div class=\"ui protvista padded grid\">\n\n          <div class=\"one column row\">\n\n            <div class=\"ui basic segment column\" [ngClass]=\"{'disabled loading': isJobLoading}\">\n\n              <div class=\"ui placeholder segment\" *ngIf=\"history.hasFailed()\">\n                <div class=\"ui icon header\">\n                  <i class=\"times circle red icon\"></i>\n                  It was not possible to show you the results due to an internal problem. Please try again later or <a [routerLink]=\"'/contact'\">contact us</a>.\n                </div>\n              </div>\n\n              <div class=\"ui placeholder segment\" *ngIf=\"history.isActive()\">\n                <div class=\"ui icon header\">\n                  <i class=\"spinner loading icon\"></i>\n                  The results are processing please be patient...\n                </div>\n                <button class=\"ui primary right labeled icon button\" (click)=\"getJob()\" [disabled]=\"isJobLoading\" type=\"button\" name=\"refresh\">\n                  Refresh <i class=\"sync icon\"></i>\n                </button>\n              </div>\n\n              <sqy-results-viewer [data]=\"resultData\" *ngIf=\"history.isDone()\"></sqy-results-viewer>\n\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n\nimport { UserHistory } from '../shared/user-history';\nimport { HistoryService } from '../shared/history.service';\nimport { JobService } from '../shared/job.service';\nimport { Job } from '../shared/job';\nimport { Construct } from '@models/construct';\nimport { TextModalComponent } from '@components/text-modal/text-modal.component';\nimport { TitleService } from '@services/title.service';\nimport { Track } from 'app/optimizer/shared/track';\nimport { NavService } from '@services/nav.service';\n\nconst MAX_ATTEMPTS = 20;\nconst RETRY_IN = 4000;\n\n@Component({\n  selector: 'sqy-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent implements OnInit, OnDestroy {\n\n  history: UserHistory = null;\n  isLoading = false;\n  isJobLoading = false;\n  isSearching = false;\n  msg: string = null;\n  seq: string = null;\n  resultData: { construct: Construct; results: any };\n  trackHovered: Track = null;\n  interval: any;\n  attempts = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private historySrvc: HistoryService,\n    private jobSrvc: JobService,\n    private modal: NzModalService,\n    private notify: NzMessageService,\n    private titleSrvc: TitleService,\n    private navSrvc: NavService\n  ) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.history = new UserHistory().deserialize(this.route.snapshot.data.history);\n    this.titleSrvc.setTitle(this.history.name);\n    this.getJob();\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  getJob() {\n    this.isJobLoading = true;\n    this.jobSrvc.getById(this.history.job_id)\n      .pipe(finalize(() => {\n        this.isLoading = false;\n        this.isJobLoading = false;\n      }))\n      .subscribe(\n        (data: Job) => {\n          this.history.job = data;\n          if (this.history.isDone()) {\n            if (this.interval) {\n              clearInterval(this.interval);\n            }\n            this.resultData = {\n              construct: this.history.construct,\n              results: this.history.job.result\n            };\n          } else if (this.history.isActive()) {\n            if (!this.interval) {\n              this.interval = setInterval(() => this.getJob(), RETRY_IN);\n              this.attempts = 0;\n            }\n            this.attempts++;\n            if (this.attempts >= MAX_ATTEMPTS) { clearInterval(this.interval); }\n          }\n        },\n        err => this.notify.error(err)\n      );\n  }\n\n  deleteHistory() {\n    if (confirm('Are you sure?')) {\n      this.isLoading = true;\n      this.historySrvc.delete(this.history.id)\n        .pipe(finalize(() => this.isLoading = false))\n        .subscribe(() => {\n          this.navSrvc.updateBadge();\n          this.notify.success('History deleted!');\n          this.router.navigate(['/workspace']);\n        },\n          err => this.notify.error(err || 'Unable to delete history')\n        );\n    }\n  }\n\n  textModal(str: string) {\n    this.modal.create({\n      nzContent: TextModalComponent,\n      nzWrapClassName: 'center-modal',\n      nzComponentParams: {\n        txt: str\n      },\n      nzFooter: null\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WorkspaceComponent } from './workspace.component';\nimport { HistoryComponent } from './history/history.component';\nimport { HistoryResolver } from './shared/history.resolver';\nimport { routes as rts } from '@config/routes';\n\nconst routes: Routes = [\n  { path: '', component: WorkspaceComponent },\n  { path: rts.workspace.detail, component: HistoryComponent, resolve: { history: HistoryResolver } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [HistoryResolver]\n})\nexport class WorkspaceRoutingModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\n\nimport { WorkspaceRoutingModule } from './workspace-routing.module';\nimport { WorkspaceComponent } from './workspace.component';\nimport { HistoryComponent } from './history/history.component';\nimport { HistoryLoadingComponent } from './shared/history-loading/history-loading.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ResultsViewerComponent } from './shared/results-viewer/results-viewer.component';\nimport { DisplayValuesComponent } from './shared/display-values/display-values.component';\nimport { SetHighlightComponent } from './shared/set-highlight/set-highlight.component';\nimport { ExportModalComponent } from './shared/export-modal/export-modal.component';\nimport { SetCutoffComponent } from './shared/set-cutoff/set-cutoff.component';\n\n@NgModule({\n  declarations: [\n    WorkspaceComponent,\n    HistoryComponent,\n    HistoryLoadingComponent,\n    ResultsViewerComponent,\n    DisplayValuesComponent,\n    SetHighlightComponent,\n    ExportModalComponent,\n    SetCutoffComponent\n  ],\n  imports: [\n    CommonModule,\n    WorkspaceRoutingModule,\n    SharedModule,\n    NzModalModule,\n    NzSelectModule,\n    NzDropDownModule,\n    ReactiveFormsModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class WorkspaceModule { }\n"]}
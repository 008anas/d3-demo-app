'''
Django settings for BioRoboost project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
'''

import os
from configparser import RawConfigParser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.contrib.auth import get_user_model

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

config = RawConfigParser()

try:
    config.read(os.path.join(BASE_DIR, '.env.ini'))
except FileNotFoundError:
    print("File: .env.ini not found.")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if config.has_option('MAIN', 'SECRET_KEY'):
    SECRET_KEY = config.get('MAIN', 'SECRET_KEY')
else:
    SECRET_KEY = 'mncl3yc&l&a4@6c_)9*n!tn+p@8o7zs^i19w38zfsk6t%f0r65'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (config.get('MAIN', 'DEBUG').lower() in ['true', '1', 'yes'])

APP_URL = config.get('MAIN', 'APP_URL')

APPEND_SLASH=False

# EMAIL
EMAIL_HOST_USER = 'bioroboost@crg.es'
EMAIL_HOST_PASSWORD = ''

LOGGING_DIR = os.path.join(BASE_DIR, 'logs')

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'django_rq',
    'rest_framework',
    'core',
    'app.specie.apps.SpeciesConfig',
    'app.genetic_element.apps.GeneticElementsConfig',
    'app.contact.apps.ContactConfig',
    'app.construct.apps.ConstructConfig',
    'app.workspace.apps.WorkspaceConfig',
    'app.matrix.apps.MatrixConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# REST FRAMEWORK configuration
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '10000/hour',
        'user': '10000/hour',
    }
}

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'BioRoboost.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BioRoboost.wsgi.application'

if config.has_section('DATABASE'):
    DATABASES = {
        'default': {
            'ENGINE': config.get('DATABASE', 'DB_ENGINE'),
            'NAME': config.get('DATABASE', 'DB_NAME'),
            'USER': config.get('DATABASE', 'DB_USER'),
            'PASSWORD': config.get('DATABASE', 'DB_PASS'),
            'HOST': config.get('DATABASE', 'DB_HOST'),
            'PORT': config.get('DATABASE', 'DB_PORT')
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3')
        }
    }

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

RQ_QUEUES = {
    'default': {
        'URL': 'redis://localhost:6379',
        # 'PASSWORD': 'gJKUadGMAaSUeYEKuDSEX0nHPjzfC3DY1kakCnmX3XmkVNboqIVqT1+jw35SHGcvb0efIqYwb9Apm32h',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 360,
    }
}
